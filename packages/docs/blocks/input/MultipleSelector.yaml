# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/blocks/template.yaml.njk
  vars:
    block_type: MultipleSelector
    value_type: any[]
    category: input
    schema: ../plugins/blocks/blocks-antd/src/blocks/MultipleSelector/schema.json
    filePath: blocks/input/MultipleSelector.yaml
    init_state_values:
      __type_block.properties.options: object[]
      __object_arr_block.properties.options:
        - label: First
          value: '1'
        - label: Second
          value: '2'

    description_content: |
      The `MultipleSelector` block is a drop down selector that allows a user to select multiple values from a set of options.

      The options for the selector can be provides as either an array of primitive values (Strings, numbers, booleans or dates), or as an array of label-value pairs, where the label is a string, and the value can be of any type, including objects like dates and arrays.

      > Other selector blocks are `ButtonSelector`, `CheckboxSelector`, `RadioSelector` and `Selector`.

    examples:
      - title: Basic MultipleSelector Usage
        block:
          id: basic_selector
          type: MultipleSelector
          properties:
            title: Select options
            options:
              - Option A
              - Option B
              - Option C
      - title: MultipleSelector with label value options
        block:
          id: label_value_selector
          type: MultipleSelector
          properties:
            title: Select options
            options:
              - label: Option 1
                value: 1
              - label: Option 2
                value: 2
              - label: Option 3
                value: 3
      - title: MultipleSelector with html label value options
        block:
          id: label_value_selector
          type: MultipleSelector
          properties:
            title: Select options
            options:
              - label: |
                  <div style="font-weight: bold;">Max Verstappen</div>
                  <div style="font-size: 0.7em;">Red Bull Racing</div>
                value: 1
              - label: |
                  <div style="font-weight: bold;">Logan Sargeant</div>
                  <div style="font-size: 0.7em;">Williams</div>
                value: 2
              - label: |
                  <div style="font-weight: bold;">Daniel Ricciardo</div>
                  <div style="font-size: 0.7em;">AlphaTauri</div>
                value: 3
      - title: MultipleSelector that renders Tags for selected values
        block:
          id: label_value_selector
          type: MultipleSelector
          properties:
            title: Select options
            renderTags: true
            options:
              - label: |
                  <div style="font-weight: bold;">Max Verstappen</div>
                  <div style="font-size: 0.7em;">Red Bull Racing</div>
                value: 1
                tag:
                  color: red
                  title: Max
              - label: |
                  <div style="font-weight: bold;">Logan Sargeant</div>
                  <div style="font-size: 0.7em;">Williams</div>
                value: 2
                tag:
                  color: blue
                  title: Logan
              - label: |
                  <div style="font-weight: bold;">Daniel Ricciardo</div>
                  <div style="font-size: 0.7em;">AlphaTauri</div>
                value: 3
                tag:
                  color: magenta
                  title: Daniel
      - title: Listing options from database search
        block:
          id: example_selector
          type: MultipleSelector
          requests:
            - id: example_search
              type: MongoDBAggregation
              connectionId: companies
              payload:
                search_input:
                  _state: search_input
              properties:
                pipeline:
                  - $search:
                      compound:
                        should:
                          - wildcard:
                              query:
                                _string.concat:
                                  - '*'
                                  - _payload: search_input
                                  - '*'
                              path: # field names to search in the companies collection
                                - _id
                                - company_name
                              allowAnalyzedField: true
                  - $addFields:
                      score:
                        $meta: searchScore
                  - $sort:
                      score: -1
                  - $limit: 50
                  - $project:
                      _id: 0
                      value: $_id
                      label:
                        $concat:
                          - $_id
                          - ' - '
                          - $ifNull:
                              - $company_name
                              - ''
          properties:
            placeholder: Search
            options: # search request results will be used as options
              _array.concat:
                - _if_none:
                    - _state: example_options
                    - []
                - _if_none:
                    - _request: example_search
                    - []
            label:
              disabled: true
          events:
            onChange: # selector onChange actions - triggered when the value of the selector changes
              - id: set_state
                type: SetState
                params:
                  example_options:
                    _mql.aggregate:
                      on:
                        _array.concat:
                          - _state: example_options
                          - _request: example_search
                      pipeline:
                        - $match:
                            value:
                              $in:
                                _state: example_selector
            onSearch: # selector onSearch actions - triggered when the user types in the search input
              debounce:
                ms: 500
              try:
                - id: set_state
                  type: SetState
                  params:
                    search_input:
                      _event: value
                - id: perform_search
                  type: Request
                  params: example_search
