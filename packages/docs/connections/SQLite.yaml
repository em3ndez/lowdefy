# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: SQLite
    pageTitle: SQLite
    section: Connections
    filePath: connections/SQLite.yaml
    content:
      - id: markdown_intro
        type: Markdown
        properties:
          content: |
            The [Knex](/Knex) connection can be used to connect to a [SQLite](https://www.sqlite.org) database.
      - id: warning
        type: Alert
        properties:
          type: warning
          showIcon: false
          description: |
            SQLite is best suited as a development database when used with Lowdefy. Using SQLite in a serverless environment is not recommended, and not supported by the current Lowdefy deployment options. See the example below on how to configure different database connections based on the environment.

      - id: markdown_connection
        type: MarkdownWithCode
        properties:
          content: |
            ## Connections

            Connection types:
              - Knex

            ### Knex

            #### Properties
            - `client: enum`: __Required__ - Should be `sqlite3` or `sqlite` to connect to SQLite.
            - `connection: object`:
              - `filename: string`:  __Required__ - The path to the SQLite file (relative to the project root).
            - `useNullAsDefault: boolean`: If true, undefined keys are replaced with NULL instead of DEFAULT.


            #### Examples

            ##### Specify filename:
            ```yaml
            connections:
              - id: sqlite
                type: Knex
                properties:
                  client: sqlite
                  connection:
                    filename: ./mydb.sqlite
            ```

            ###### Different connections in deployment and production environments:
            ```yaml
            connections:
              - id: knex
                type: Knex
                properties:
                  client:
                    _secret: KNEX_CLIENT
                  connection:
                    _json.parse:
                      _secret: KNEX_CONNECTION
            ```
            Environment variables in development:
            ```
            LOWDEFY_SECRET_KNEX_CLIENT = sqlite
            LOWDEFY_SECRET_KNEX_CONNECTION = {"filename": "./mydb.sqlite"}
            ```
            Environment variables in production:
            ```
            LOWDEFY_SECRET_KNEX_CLIENT = postgres
            LOWDEFY_SECRET_KNEX_CONNECTION = {"user": "dbuser", "host": "database.server.com", "database": "mydb", "password": "secretpassword"}
            ```

      - id: markdown_requests
        type: MarkdownWithCode
        properties:
          content:
            _ref: connections/KnexRequests.md
