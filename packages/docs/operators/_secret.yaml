# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/operators.yaml.njk
  transformer: templates/operatorsMethodTransformer.js
  vars:
    pageId: _secret
    pageTitle: _secret
    filePath: operators/_secret.yaml
    env: Server Only
    types: |
      ```
      (key: string): any
      (all: boolean): any
      (arguments: {
        all?: boolean,
        key?: string,
        default?: any
      }): any
      ```
    description: |
      The `_secret` operator gets a value from the [`secret`](/context-and-secret) object. The `secrets` is a data object that contains sensitive information like passwords or API keys. The `_secret` operator can only be used in `connections` and `requests`. Secrets are read from environment variables on the server that start with `LOWDEFY_SECRET_`, (i.e. `LOWDEFY_SECRET_SECRET_NAME`). The name of the secret is the part after `LOWDEFY_SECRET_`. Since environment variables can only be strings, secrets can be JSON encoded, and parsed using the [`_json.parse`](/_json) method.

    arguments: |
      ###### string
      If the `_secret` operator is called with a string argument, the value of the key in the `secrets` object is returned. If the value is not found, `null` is returned.

      ###### boolean
      If the `_secret` operator is called with boolean argument `true`, the entire `secrets` object is returned.

      ###### object
        - `all: boolean`: If `all` is set to `true`, the entire `secrets` object is returned. One of `all` or `key` are required.
        - `key: string`: The value of the key in the `secrets` object is returned. If the value is not found, `null`, or the specified default value is returned. One of `all` or `key` are required.
        - `default: any`: A value to return if the `key` is not found in `secrets`. By default, `null` is returned if a value is not found.
    examples: |
      ###### Get the value of `MY_SECRET` from `secrets`:
      ```yaml
      _secret: MY_SECRET
      ```
      ```yaml
      _secret:
        key: MY_SECRET
      ```
      Returns: The value of `MY_SECRET` in `secrets`.

      ###### Get the entire `secret` object:
      ```yaml
      _secret: true
      ```
      ```yaml
      _secret:
        all: true
      ```
      Returns: The entire `secrets` object.

      ###### Return a default value if the value is not found:
      ```yaml
      _secret:
        key: MY_SECRET
        default: Not so secret
      ```
      Returns: The value of `MY_SECRET`, or `"Not so secret"`.
