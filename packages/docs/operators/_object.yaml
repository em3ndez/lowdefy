# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/operators.yaml.njk
  transformer: templates/operatorsMethodTransformer.js
  vars:
    pageId: _object
    pageTitle: _object
    filePath: operators/_object.yaml
    build: true
    description: |
      The `_object` operator can be used to run javascript [`Object`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object) methods.
    methods:
      - name: assign
        types: |
          ```
          (objs: obj[]): object
          ```
        description: |
          The `_object.assign` method copies the values of one ore more source objects to a target objects. The first object in the arguments array is the target object, and the rest are source objects. Keys in the target object are overwritten. The result of `_object.assign` can be seen as a "shallow-merge" of all the objects in the array, with the values in later objects taken preferentially.
        arguments: |
          ###### array
          An array of objects.
        examples: |
          ###### Merge three objects:
          ```yaml
          _object.assign:
            - firstName: Rachel
              lastName: Green
              series: Friends
            - firstName: Monica
              lastName: Geller
              address:
                street: 90 Bedford St
                city: New York
                zipCode: '10014'
                country: US
            - friends:
                - Ross Geller
                - Rachel Green
                - Chandler Bing
                - Phoebe Buffay
                - Joey Tribbiani
          ```
          Returns:
          ```yaml
          firstName: Monica
          lastName: Geller
          series: Friends
          address:
            street: 90 Bedford St
            city: New York
            zipCode: '10014'
            country: US
          friends:
            - Ross Geller
            - Rachel Green
            - Chandler Bing
            - Phoebe Buffay
            - Joey Tribbiani
          ```
      - name: defineProperty
        types: |
          ```
          (arguments: {
            on: object,
            key: string,
            descriptor: {
              value: any,
              configurable?: boolean,
              enumerable?: boolean,
              writable?: boolean
            }
          }): any
          (arguments: [
            on: object,
            key: string,
            descriptor: {
              value: any,
              configurable?: boolean,
              enumerable?: boolean,
              writable?: boolean
            }
          ]): any
          ```
        description: |
          The `_object.defineProperty` method defines a new property directly on an object, or modifies an existing property on an object, and returns the object. The first object in the arguments array, or the `on` parameter, is the target object to which the property will be applied. The second argument, or the `key` parameter, is the property name or key which will be applied to the target object. The third and last object argument, or the `descriptor` parameter, has serval options to consider, however, for the most common application set the `value` object key to the value that should be applied to the target object key. See [Object.defineProperty](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty) for a more detailed description.

          > The `_object.defineProperty` method is handy when the `key` to set is variable.
        examples: |
          ###### Set a value to a object key:
          ```yaml
          _object.defineProperty:
            on:
              firstName: Rachel
              series: Friends
            key: lastName
            descriptor:
              value: Green
          ```
          Returns:
          ```yaml
          firstName: Rachel
          lastName: Green
          series: Friends
          ```
      - name: entries
        types: |
          ```
          (obj: object): any[]
          ```
        description: |
          The `_object.entries` method returns an array with an array of key-values pairs of all the fields in an object.
        arguments: |
          ###### object
          The object to get entries from.
        examples: |
          ###### Get the entries of an object:
          ```yaml
          _object.entries:
            firstName: Monica
            lastName: Geller
          ```
          Returns:
          ```yaml
          - - firstName
            - Monica
          - - lastName
            - Geller
          ```
      - name: fromEntries
        types: |
          ```
          (array: any[][]): object
          ```
        description: |
          The `_object.fromEntries` method creates an object from an array of key-value pairs.
        arguments: |
          ###### array
          The array of key-value pairs.
        examples: |
          ###### Get the entries of an object:
          ```yaml
          _object.fromEntries:
            - - firstName
              - Monica
            - - lastName
              - Geller
          ```
          Returns:
          ```yaml
          firstName: Monica
          lastName: Geller
          ```
      - name: keys
        types: |
          ```
          (obj: object): string[]
          ```
        description: |
          The `_object.keys` method returns an array with the objects keys.
        arguments: |
          ###### object
          The object to get keys from.
        examples: |
          ###### Get the keys of an object:
          ```yaml
          _object.keys:
            firstName: Monica
            lastName: Geller
            address:
              street: 90 Bedford St
              city: New York
              zipCode: '10014'
              country: US
            friends:
              - Ross Geller
              - Rachel Green
              - Chandler Bing
              - Phoebe Buffay
              - Joey Tribbiani
          ```
          Returns:
          ```yaml
          - firstName
          - lastName
          - address
          - friends
          ```
      - name: values
        types: |
          ```
          (obj: object): any[]
          ```
        description: |
          The `_object.values` method returns an array with the values of all the fields in an object.
        arguments: |
          ###### object
          The object to get values from.
        examples: |
          ###### Get the values of an object:
          ```yaml
          _object.values:
            firstName: Monica
            lastName: Geller
            address:
              street: 90 Bedford St
              city: New York
              zipCode: '10014'
              country: US
            friends:
              - Ross Geller
              - Rachel Green
              - Chandler Bing
              - Phoebe Buffay
              - Joey Tribbiani
          ```
          Returns:
          ```yaml
          - Monica
          - Geller
          - street: 90 Bedford St
            city: New York
            zipCode: '10014'
            country: US
          - - Ross Geller
            - Rachel Green
            - Chandler Bing
            - Phoebe Buffay
            - Joey Tribbiani
          ```
