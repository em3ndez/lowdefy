# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/actions.yaml.njk
  vars:
    pageId: Fetch
    pageTitle: Fetch
    types: |
      ```
      (params: {
        url: string,
        options: object,
        responseFunction: string
      }): string | object
      ```
    description: |
      The `Fetch` implements the [fetch web API](https://developer.mozilla.org/en-US/docs/Web/API/fetch) and can be used to make HTTP requests directly from the web client.
    params: |
      ###### object
      - `url: string`: __Required__ - The URL of the resource you want to fetch..
      - `options: object`: The options object of the `fetch` global function. These include, but are not limited to:
        - `method: string`: The request method, e.g., `"GET"`, `"POST"`. The default is `"GET"`.
        - `headers: object`: An object with headers to add to the request.
        - `body: string`: The request body. Use the [`_json.stringify`](/_json) operator to create a JSON body.
      - `responseFunction: enum`: If the `responseFunction` is specified, that function will be executed on the returned Response object. If specified this is equavalent to `await fetch(url, options).json()`. Should be one of of `'json'`, `'text'`, `'blob'`, `'arrayBuffer'`, or `'formData'`.
    examples: |
      ######  Call a JSON API endpoint:
      ```yaml
      - id: fetch
        type: Fetch
        params:
          url: https://example.com/api/products
          options:
            method: GET
          responseFunction: json
      ```

      ######  Make a post request:
      ```yaml
      - id: fetch
        type: Fetch
        params:
          url: https://example.com/api/products/abc
          options:
            method: POST
            headers:
              Content-Type: application/json
            body:
              _json.stringify:
                - _state: product
          responseFunction: json
      ```
