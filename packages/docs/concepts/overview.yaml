# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: overview
    pageTitle: Overview
    section: Concepts
    filePath: concepts/overview.yaml
    content:
      - id: md1
        type: Markdown
        properties:
          content: |
            A Lowdefy app is a [Next.js](https://nextjs.org) application, that interprets / evaluates Lowdefy config. Lowdefy apps are written as YAML configuration files, which are easy to read, write and understand - and can be managed in source control. This makes Lowdefy quick to learn, maintain and pick up where others left off.

            Lowdefy can be considered as another level of abstraction on top of Next.js. The Lowdefy schema is designed to be a standardized, declarative and flexible expression of application parameters and logic. This allows developers to focus on translating the business problem into configuration.

            The Lowdefy schema abstracts app definitions into 5 categories:
            - [**Blocks**](/blocks): The building blocks of the UI, the client-side React component to render. Blocks are usually stateless since all app state is managed by the Lowdefy engine.
            - [**Operators**](/operators): The application logic is defined using operator functions, which can be used both server-side and client-side. These are synchronous methods, which are continuously evaluated every time the app state changes.
            - [**Actions**](/events-and-actions): Asynchronous client-side methods triggered by events, such as clicking a button or initializing the page state. These methods usually apply an action like setting state, using the ([SetState](/SetState)) action, or calling a request, using the [Request]/Request action.
            - [**Connections and Requests**](connections-and-requests): Server-side methods, which allow a Lowdefy app to make server requests to other services like APIs or databases. Requests are evoked by the [Request]/(/Request) action, and are only called after all user authentication and authorization checks have passed. Requests consume a payload from the client, and have access to server-side secrets like passwords and API keys.
            - [**Auth Providers and Adapters**](/authentication): Lowdefy implements [NextAuth.js](https://next-auth.js.org) for authentication. NextAuth allows for the configuration of a wide range of authentication providers and adapters, which can be configured in Lowdefy apps.

            The diagram below provides an overview of the Lowdefy app schematic:
            ![Lowdefy App Diagram](/images/lowdefy_app_schema.png)

            Lowdefy offers a large number of default actions, blocks, operators, connections, and auth integrations - but also provides a [plugin interface](/plugins) for the extension of new types. All plugins are installed as [npm](https://www.npmjs.com/) modules, which means you can extend your Lowdefy application by any existing npm module - enabling developers to make use of anything that is available in the Javascript ecosystem.

            Since Lowdefy apps are self-hosted Next.js applications, they do not ship with a built in data store and typically connect to one or more APIs or databases. Server instances are also stateless, which simplifies deployment. We recommend using [Vercel](https://vercel.com) since it is the hosting platform provided by the team behind Next.js. Alternatively, you can deploy your app using Docker or use another hosting provider that supports hosting Next.js applications.

      - _ref:
          path: templates/navigation_buttons.yaml
          vars:
            previous_page_title: Tutorial
            previous_page_id: tutorial-start
            next_page_title: Lowdefy App Schema
            next_page_id: lowdefy-schema
