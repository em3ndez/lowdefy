# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: cli
    pageTitle: The CLI
    section: Concepts
    filePath: concepts/cli.yaml
    content:
      - id: md1
        type: MarkdownWithCode
        properties:
          content: |
            The Lowdefy CLI is used to develop a Lowdefy app locally, and to build Lowdefy apps for deployment.

            We recommend running the CLI using `pnpx`, to always use the latest version:

            ```
            pnpx lowdefy@4 <command>
            ```

            or, to use a specific version:

            ```
            pnpx lowdefy@version <command>
            ```

            Alternative, you can install the CLI globally or to a Javascript project (with a `package.json` file) via pnpm.

            To install the CLI globally run:

            ```
            pnpm add -g lowdefy
            ```

            The CLI can then be run using `lowdefy` as the executable name:

            ```
            lowdefy <command>
            ```

            # CLI commands

            ## build

            The `build` command runs a Lowdefy build. This builds a production Lowdefy app in the server directory, which can then be started using the `lowdefy start` command. The options are:

            - `--community-edition`: Use the Apache 2.0 licensed community edition server.
            - `--config-directory <config-directory>`: Change the config directory. The default is the current working directory.
            - `--disable-telemetry`: Disable telemetry.
            - `--log-level <level>`: The minimum severity of logs to show in the CLI output. Options are `debug`, `info`, `warn` or `error`. The default is `info`.
            - `--no-next-build`: Do not build the Next.js server, and only build the Lowdefy config. Used in some deployment scripts where the Next.js build is done as a separate step.
            - `--ref-resolver <ref-resolver-function-path>`: Path to a JavaScript file containing a `_ref` resolver function to be used as the app default `_ref` resolver.
            - `--server-directory <server-directory>`: Change the server directory, the directory in which the production server is placed. The default is `<config-directory>/.lowdefy/server`.


            ## dev

            The `dev` command starts a Lowdefy development server, running locally. It can be accessed in a browser at [http://localhost:3000](http://localhost:3000). The CLI watches the file system, and rebuilds the app and reloads served pages every time a change is made to any of the files in the project directory. The `dev` command should not be used to serve a production app, the `build` and `start` commands should be used instead.

            - `--config-directory <config-directory>`: Change the config directory. The default is the current working directory.
            - `--dev-directory <dev-directory>`: Change the dev directory, the directory in which the development server is placed. The default is `<config-directory>/.lowdefy/dev`.
            - `--disable-telemetry`: Disable telemetry.
            - `--log-level <level>`: The minimum severity of logs to show in the CLI output. Options are `debug`, `info`, `warn` or `error`. The default is `info`.
            - `--no-open`: Do not open a new tab in the default browser.
            - `--port <port>`: Change the port the server is hosted at. The default is `3000`.
            - `--ref-resolver <ref-resolver-function-path>`: Path to a JavaScript file containing a `_ref` resolver function to be used as the app default `_ref` resolver.
            - `--watch <paths...>`: A list of paths to files or directories that should be watched for changes. Globs are supported. Specify each path to watch separated by spaces.
            - `--watch-ignore <patterns...>`: A list of paths to files or directories that should be ignored by the file watcher. Globs are supported. Specify each path to watch separated by spaces.

            ## init

            The `init` command initializes a Lowdefy application. It creates the `lowdefy.yaml` and `.gitignore` in the working directory.

            - `--disable-telemetry`: Disable telemetry.
            - `--log-level <level>`: The minimum severity of logs to show in the CLI output. Options are `debug`, `info`, `warn` or `error`. The default is `info`.

            ## init-docker

            The `init-docker` command initializes a Dockerfile in the config directory that can be used to build a Docker image of the Lowdefy app.

            - `--config-directory <config-directory>`: Change the config directory. The default is the current working directory.
            - `--disable-telemetry`: Disable telemetry.
            - `--log-level <level>`: The minimum severity of logs to show in the CLI output. Options are `debug`, `info`, `warn` or `error`. The default is `info`.

            ## init-vercel

            The `init-vercel` command initializes the installation scripts needed to deploy an app on [Vercel](https://vercel.com). It creates a directory called deploy, and a script called vercel.install.sh. It also creates a README file with instructions on how to configure Vercel.

            - `--config-directory <config-directory>`: Change the config directory. The default is the current working directory.
            - `--disable-telemetry`: Disable telemetry.
            - `--log-level <level>`: The minimum severity of logs to show in the CLI output. Options are `debug`, `info`, `warn` or `error`. The default is `info`.

            ## start

            The `start` command starts a Lowdefy production server. To start a Lowdefy server, tha app should first be built using the `build` command.

            - `--config-directory <config-directory>`: Change the config directory. The default is the current working directory.
            - `--disable-telemetry`: Disable telemetry.
            - `--log-level <level>`: The minimum severity of logs to show in the CLI output. Options are `debug`, `info`, `warn` or `error`. The default is `info`.
            - `--port <port>`: Change the port the server is hosted at. The default is `3000`.
            - `--server-directory <server-directory>`: Change the server directory, the directory in which the production server is placed. The default is `<config-directory>/.lowdefy/server`.


            #### Examples


            Run the dev server, watching a relative directory for file changes:
            ```txt
            pnpx lowdefy@4 dev --watch ../other-project
            ```

            Run the dev server, ignoring the public directory:
            ```txt
            pnpx lowdefy@4 dev --watch-ignore public/**
            ```



            # Configuration

            All the CLI options can either be set as command line options, or the `cli` config object in your `lowdefy.yaml` file. Options set as command line options take precedence over options set in the `lowdefy.yaml` file. The config in the `lowdefy.yaml` cannot be referenced using the `_ref` operator, but need to be set in the file itself.

            Options set in the `lowdefy.yaml` should be defined in camelCase. The options that can be set are:
            - `communityEdition: boolean`: Use the Apache 2.0 licensed community edition server.
            - `devDirectory: string`: Change the dev directory, the directory in which the development server is placed. The default is `<config-directory>/.lowdefy/dev`.
            - `disableTelemetry: boolean`: Disable telemetry.
            - `logLevel: enum`: The minimum severity of logs to show in the CLI output. Options are `debug`, `info`, `warn` or `error`. The default is `info`.
            - `noOpen`: Do not open a new tab in the default browser.
            - `port: number`: Change the port the server is hosted at. The default is `3000`.
            - `refResolver: string`: Path to a JavaScript file containing a `_ref` resolver function to be used as the app default `_ref` resolver.
            - `serverDirectory: string`: Change the server directory, the directory in which the production server is placed. The default is `<config-directory>/.lowdefy/server`.
            - `watch: string[]`: A list of paths to files or directories that should be watched for changes.
            - `watchIgnore: string[]`: A list of paths to files or directories that should be ignored by the file watcher. Globs are supported.

            The `--config-directory` option cannot be set from the `lowdefy.yaml` file.

            # Telemetry

            The CLI collects usage and error information to help us fix bugs, prioritize features, and understand how Lowdefy is being used.

            All telemetry can be disabled by setting the `disableTelemetry` flag in `cli` config object in your `lowdefy.yaml` file (this cannot be a reference to another file), or by using the `--disable-telemetry` command line flag.:

            ###### `lowdefy.yaml`
            ```yaml
            lowdefy: LOWDEFY_VERSION

            cli:
              disableTelemetry: true
            ```

            We collect the following information:

            - The CLI version.
            - The Lowdefy version of your app.
            - A random local app id (stored locally in your project folder at `.lowdefy/cli.json`).
            - The CLI command used.
            - Your IP address.
            - Error messages and stack traces for any errors.
