# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: OpenIDConnectProvider
    pageTitle: OpenIDConnectProvider
    section: User Authentication
    filePath: users/reference/OpenIDConnectProvider.yaml
    content:
      - id: content
        type: MarkdownWithCode
        properties:
          content:
            _nunjucks:
              on:
                version:
                  _ref: version.yaml
              template: |
                The OpenIDConnectProvider can be used to authenticate with a OpenID Connect compliant identity provider that is not already included as a default Next-Auth provider, without the need to develop a custom provider plugin.

                #### Properties

                ###### object
                  - `wellKnown: string`
                  - `authorization: string | object`: The default is `{ params: { scope: 'openid email profile' } }`.
                  - `token: string | object`
                  - `userinfo: string | object`
                  - `version: string`
                  - `checks: string | string[]`: The default is `['pkce', 'state']`
                  - `clientId: string`
                  - `clientSecret: string`
                  - `idToken: boolean`: The default is `true`.
                  - `region: string`
                  - `issuer: string`
                  - `allowDangerousEmailAccountLinking: boolean`
                  - `style: object`

                ###### See the [Next-Auth OAuth provider options](https://next-auth.js.org/configuration/providers/oauth#options) for more details on provider properties.

                #### Examples

                ###### Simple configuration.

                Usually only the `wellKnown`, `clientId` and `clientSecret` properties need to be configured:

                ```yaml
                lowdefy: {{ version }}
                providers:
                  - id: my_provider
                    type: OpenIDConnectProvider
                    properties:
                      wellKnown:
                        _secret: OPENID_CONNECT_WELLKNOWN
                      clientId:
                        _secret: OPENID_CONNECT_CLIENT_ID
                      clientSecret:
                        _secret: OPENID_CONNECT_CLIENT_SECRET
                ```

                where `LOWDEFY_SECRET_OPENID_CONNECT_WELLKNOWN` usually has the format `https://my-provider.com/.well-known/openid-configuration`
