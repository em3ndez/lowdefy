// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="default_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": undefined,
              "title": "Add Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": undefined,
      "id": "default",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.addItemButton: title: Add new Item - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.addItemButton: title: Add new Item_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": undefined,
              "title": "Add new Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": undefined,
      "id": "properties.addItemButton: title: Add new Item",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.addToFront: true - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": false,
      "header": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.addToFront: true_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": undefined,
              "title": "Add Item",
              "type": "default",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "id": "properties.addToFront: true",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.hideAddButton: true - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": false,
      "header": undefined,
      "id": "properties.hideAddButton: true",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.noDataTitle: No title display - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.noDataTitle: No title display_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": undefined,
              "title": "Add Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": undefined,
      "id": "properties.noDataTitle: No title display",
      "locale": Object {
        "emptyText": "No title display",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.removeItemIcon: DeleteOutlined - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.removeItemIcon: DeleteOutlined_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": undefined,
              "title": "Add Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": undefined,
      "id": "properties.removeItemIcon: DeleteOutlined",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.removeItemIcon: name: DeleteOutlined - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.removeItemIcon: name: DeleteOutlined_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": undefined,
              "title": "Add Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": undefined,
      "id": "properties.removeItemIcon: name: DeleteOutlined",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.size: large - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.size: large_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": "large",
              "title": "Add Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": undefined,
      "id": "properties.size: large",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": "large",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.size: small - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.size: small_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": "small",
              "title": "Add Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": undefined,
      "id": "properties.size: small",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": "small",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title - value[0] - ControlledList 1`] = `
Array [
  Array [
    Object {
      "bordered": true,
      "dataSource": Array [],
      "footer": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <br />
        <ButtonBlock
          basePath=""
          blockId="properties.title_add_button"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [Function],
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          onClick={[Function]}
          properties={
            Object {
              "icon": "PlusOutlined",
              "size": undefined,
              "title": "Add Item",
              "type": "dashed",
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </div>,
      "header": <div
        className="{\\"style\\":[{\\"display\\":\\"flex\\",\\"flexDirection\\":\\"row\\",\\"flexWrap\\":\\"nowrap\\",\\"justifyContent\\":\\"space-between\\"},null]}"
      >
        <Text
          strong={true}
        >
          ControlledList block
        </Text>
      </div>,
      "id": "properties.title",
      "locale": Object {
        "emptyText": "No Items",
      },
      "renderItem": [Function],
      "size": undefined,
    },
    Object {},
  ],
]
`;
