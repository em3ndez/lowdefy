// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "default_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - default - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.allowClear: false - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": false,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.allowClear: false_0"
          value="0"
        >
          <HtmlComponent
            html="Option 1"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.allowClear: false_1"
          value="1"
        >
          <HtmlComponent
            html="Option 2"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.allowClear: false_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.allowClear: false - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.autoFocus: true - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": true,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.autoFocus: true_0"
          value="0"
        >
          <HtmlComponent
            html="Option 1"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.autoFocus: true_1"
          value="1"
        >
          <HtmlComponent
            html="Option 2"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.autoFocus: true_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.autoFocus: true - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.clearIcon: ChromeFilled - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.clearIcon: ChromeFilled_0"
          value="0"
        >
          <HtmlComponent
            html="Option 1"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.clearIcon: ChromeFilled_1"
          value="1"
        >
          <HtmlComponent
            html="Option 2"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": <IconComp1
        basePath=""
        blockId="properties.clearIcon: ChromeFilled_clearIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="ChromeFilled"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.clearIcon: ChromeFilled_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.clearIcon: ChromeFilled - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.clearIcon-object: ChromeFilled - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.clearIcon-object: ChromeFilled_0"
          value="0"
        >
          <HtmlComponent
            html="Option 1"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.clearIcon-object: ChromeFilled_1"
          value="1"
        >
          <HtmlComponent
            html="Option 2"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": <IconComp1
        basePath=""
        blockId="properties.clearIcon-object: ChromeFilled_clearIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "color": "red",
            "name": "ChromeFilled",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.clearIcon-object: ChromeFilled_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.clearIcon-object: ChromeFilled - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.disabled: true - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": true,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.disabled: true_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.disabled: true - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.inputStyle: CSS style applied - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},{\\"border\\":\\"1px solid red\\"}]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.inputStyle: CSS style applied_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.inputStyle: CSS style applied - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.label align: left - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.label align: left_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.label align: left - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.label align: right - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.label align: right_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.label align: right - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.label colon: false - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.label colon: false_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.label colon: false - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.label disabled: true - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.label disabled: true_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.label disabled: true - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.label extra: showing extra - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.label extra: showing extra_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.label extra: showing extra - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.label inline: true - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.label inline: true_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.label inline: true - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.label span: 12 - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.label span: 12_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.label span: 12 - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options.label: html - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          id="properties.options.label: html_0"
          value="0"
        >
          <HtmlComponent
            html=<div>
  Some main text
</div>
<div style="font-size: 6px;">
  Some small subtext
</div>
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          id="properties.options.label: html_1"
          value="1"
        >
          <HtmlComponent
            html=<div style="color: green;">
  Option green
</div>
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          id="properties.options.label: html_2"
          value="2"
        >
          <HtmlComponent
            html="Option 3"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options.label: html_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options.label: html - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options.label: html and properties.options.filterString - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          filterstring="Some main text"
          id="properties.options.label: html and properties.options.filterString_0"
          value="0"
        >
          <HtmlComponent
            html=<div>
  Some main text
</div>
<div style="font-size: 6px;">
  Some small subtext
</div>
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          filterstring="Option green"
          id="properties.options.label: html and properties.options.filterString_1"
          value="1"
        >
          <HtmlComponent
            html=<div style="color: green;">
  Option green
</div>
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          id="properties.options.label: html and properties.options.filterString_2"
          value="2"
        >
          <HtmlComponent
            html="Option 3"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options.label: html and properties.options.filterString_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options.label: html and properties.options.filterString - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options: html - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.options: html_0"
          value="0"
        >
          <HtmlComponent
            html=<div>
  Some main text
</div>
<div style="font-size: 6px;">
  Some small subtext
</div>
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.options: html_1"
          value="1"
        >
          <HtmlComponent
            html=<div style="color: green;">
  Option green
</div>
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.options: html_2"
          value="2"
        >
          <HtmlComponent
            html="Option 3"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options: html_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options: html - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options-boolean - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.options-boolean_0"
          value="0"
        >
          <HtmlComponent
            html="true"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.options-boolean_1"
          value="1"
        >
          <HtmlComponent
            html="false"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options-boolean_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options-boolean - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options-number - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.options-number_0"
          value="0"
        >
          <HtmlComponent
            html="10"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.options-number_1"
          value="1"
        >
          <HtmlComponent
            html="12"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options-number_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options-number - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options-object - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          id="properties.options-object_0"
          value="0"
        >
          <HtmlComponent
            html="one"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          id="properties.options-object_1"
          value="1"
        >
          <HtmlComponent
            html="two"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options-object_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options-object - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options-string - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{}"
          id="properties.options-string_0"
          value="0"
        >
          <HtmlComponent
            html="Option 1"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="properties.options-string_1"
          value="1"
        >
          <HtmlComponent
            html="Option 2"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options-string_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options-string - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.options-style - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{\\"style\\":[null,{\\"color\\":\\"red\\"}]}"
          id="properties.options-style_0"
          value="0"
        >
          <HtmlComponent
            html="one"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        Object {
                          "color": "red",
                        },
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,{\\"color\\":\\"red\\"}]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{\\"style\\":[null,null]}"
          id="properties.options-style_1"
          value="1"
        >
          <HtmlComponent
            html="two"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        Object {
                          "color": "red",
                        },
                      ],
                    ],
                    Array [
                      Array [
                        undefined,
                        undefined,
                      ],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,{\\"color\\":\\"red\\"}]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[null,null]}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.options-style_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.options-style - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.optionsStyle: CSS style applied - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [
        <mockConstructor
          className="{\\"style\\":{\\"color\\":\\"blue\\"}}"
          id="properties.optionsStyle: CSS style applied_0"
          value="0"
        >
          <HtmlComponent
            html="Option 1"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Object {
                        "color": "blue",
                      },
                    ],
                    Array [
                      Object {
                        "color": "blue",
                      },
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"color\\":\\"blue\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"color\\":\\"blue\\"}}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{\\"style\\":{\\"color\\":\\"blue\\"}}"
          id="properties.optionsStyle: CSS style applied_1"
          value="1"
        >
          <HtmlComponent
            html="Option 2"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      Object {
                        "color": "blue",
                      },
                    ],
                    Array [
                      Object {
                        "color": "blue",
                      },
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"color\\":\\"blue\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"color\\":\\"blue\\"}}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.optionsStyle: CSS style applied_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.optionsStyle: CSS style applied - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.placeholder: Find item in list - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.placeholder: Find item in list_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Find item in list",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.placeholder: Find item in list - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.showArrow: false - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.showArrow: false_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": false,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.showArrow: false - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.size: default - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.size: default_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": "default",
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.size: default - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.size: large - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.size: large_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": "large",
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.size: large - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.size: small - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.size: small_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": "small",
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.size: small - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.suffixIcon: DoubleLeftOutlined - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.suffixIcon: DoubleLeftOutlined_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": <IconComp1
        basePath=""
        blockId="properties.suffixIcon: DoubleLeftOutlined_suffixIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="DoubleLeftOutlined"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.suffixIcon: DoubleLeftOutlined - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - properties.title: My MultipleSelector Title - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": undefined,
      "children": Array [],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "properties.title: My MultipleSelector Title_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title: My MultipleSelector Title - value[0] - MultipleSelector 2`] = `Array []`;

exports[`Mock render - property.bordered: false - value[0] - MultipleSelector 1`] = `
Array [
  Array [
    Object {
      "allowClear": true,
      "autoFocus": undefined,
      "bordered": false,
      "children": Array [
        <mockConstructor
          className="{}"
          id="property.bordered: false_0"
          value="0"
        >
          <HtmlComponent
            html="Option 1"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
        <mockConstructor
          className="{}"
          id="property.bordered: false_1"
          value="1"
        >
          <HtmlComponent
            html="Option 2"
            methods={
              Object {
                "makeCssClass": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "width": "100%",
                      },
                    ],
                    Array [
                      Array [
                        Object {
                          "width": "100%",
                        },
                        undefined,
                      ],
                    ],
                    Array [
                      undefined,
                    ],
                    Array [
                      undefined,
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":{\\"width\\":\\"100%\\"}}",
                    },
                    Object {
                      "type": "return",
                      "value": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                    Object {
                      "type": "return",
                      "value": "{}",
                    },
                  ],
                },
                "registerEvent": [Function],
                "registerMethod": [Function],
                "setValue": [Function],
                "triggerEvent": [Function],
              }
            }
          />
        </mockConstructor>,
      ],
      "className": "{\\"style\\":[{\\"width\\":\\"100%\\"},null]}",
      "clearIcon": undefined,
      "disabled": undefined,
      "filterOption": [Function],
      "getPopupContainer": [Function],
      "id": "property.bordered: false_input",
      "menuItemSelectedIcon": undefined,
      "mode": "multiple",
      "notFoundContent": "Not found",
      "onChange": [Function],
      "onSearch": [Function],
      "placeholder": "Select items",
      "showArrow": true,
      "size": undefined,
      "suffixIcon": undefined,
      "value": Array [],
    },
    Object {},
  ],
]
`;

exports[`Mock render - property.bordered: false - value[0] - MultipleSelector 2`] = `Array []`;
