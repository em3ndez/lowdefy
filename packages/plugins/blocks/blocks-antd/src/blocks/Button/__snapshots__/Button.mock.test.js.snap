// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - Button 1`] = `mocked`;

exports[`Mock render - default - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="default"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "default",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.block: true - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.block: true - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": true,
      "children": <HtmlComponent
        html="properties.block: true"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.block: true",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.color: #9c27b0 - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.color: #9c27b0 - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.color: #9c27b0"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": Object {
                        "backgroundColor": "#75178a",
                        "borderColor": "#75178a",
                      },
                      "&:hover": Object {
                        "backgroundColor": "#af48bd",
                        "borderColor": "#af48bd",
                      },
                      "backgroundColor": "#9c27b0",
                      "borderColor": "#9c27b0",
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{\\"backgroundColor\\":\\"#9c27b0\\",\\"borderColor\\":\\"#9c27b0\\",\\"&:active\\":{\\"backgroundColor\\":\\"#75178a\\",\\"borderColor\\":\\"#75178a\\"},\\"&:hover\\":{\\"backgroundColor\\":\\"#af48bd\\",\\"borderColor\\":\\"#af48bd\\"}},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{\\"backgroundColor\\":\\"#9c27b0\\",\\"borderColor\\":\\"#9c27b0\\",\\"&:active\\":{\\"backgroundColor\\":\\"#75178a\\",\\"borderColor\\":\\"#75178a\\"},\\"&:hover\\":{\\"backgroundColor\\":\\"#af48bd\\",\\"borderColor\\":\\"#af48bd\\"}},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.color: #9c27b0",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.danger: true - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.danger: true - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.danger: true"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": true,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.danger: true",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.disabled: true - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.disabled: true - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.disabled: true"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": true,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.disabled: true",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.ghost: true - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.ghost: true - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.ghost: true"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": true,
      "href": undefined,
      "icon": undefined,
      "id": "properties.ghost: true",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.hideTitle: true - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.hideTitle: true - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.hideTitle: true_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineDelete"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.hideTitle: true",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.href: www.lowdefy.com - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.href: www.lowdefy.com - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.href: www.lowdefy.com"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": "https://www.lowdefy.com",
      "icon": undefined,
      "id": "properties.href: www.lowdefy.com",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.icon object - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.icon object - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.icon object"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon object_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "color": "red",
            "name": "AiOutlineSave",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon object",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.icon string - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.icon string - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.icon string"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon string_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineSave"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon string",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.shape: circle - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.shape: circle - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.shape: circle"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.shape: circle",
      "loading": undefined,
      "onClick": [Function],
      "shape": "circle",
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.shape: round - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.shape: round - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.shape: round"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.shape: round",
      "loading": undefined,
      "onClick": [Function],
      "shape": "round",
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.size: large - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.size: large - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.size: large"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.size: large",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": "large",
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.size: small - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.size: small - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.size: small"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.size: small",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": "small",
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.title - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="Button title"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.title",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: danger - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.type: danger - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.type: danger"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.type: danger",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "danger",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: dashed - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.type: dashed - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.type: dashed"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.type: dashed",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "dashed",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: default - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.type: default - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.type: default"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.type: default",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "default",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: link - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.type: link - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.type: link"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.type: link",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "link",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: text - value[0] - Button 1`] = `mocked`;

exports[`Mock render - properties.type: text - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html="properties.type: text"
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "properties.type: text",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "text",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with html in title - value[0] - Button 1`] = `mocked`;

exports[`Mock render - with html in title - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html=<div style="color: orange;">
  Title
</div>
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": undefined,
      "id": "with html in title",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with html in title and icon - value[0] - Button 1`] = `mocked`;

exports[`Mock render - with html in title and icon - value[0] - Button 2`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": <HtmlComponent
        html=<div style="color: red;">
  Title
</div>
        methods={
          Object {
            "makeCssClass": [MockFunction] {
              "calls": Array [
                Array [
                  Array [
                    Object {
                      "&:active": undefined,
                      "&:hover": undefined,
                      "backgroundColor": undefined,
                      "borderColor": undefined,
                    },
                    undefined,
                  ],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": "{\\"style\\":[{},null]}",
                },
              ],
            },
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="with html in title and icon_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineSave"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "with html in title and icon",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;
