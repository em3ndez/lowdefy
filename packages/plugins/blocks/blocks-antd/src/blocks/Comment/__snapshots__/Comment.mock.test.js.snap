// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - areas.actions - value[0] - Comment 1`] = `
Array [
  Array [
    Object {
      "actions": Array [
        <div
          data-testid="area-actions"
          style={
            Object {
              "border": "1px solid red",
              "padding": 10,
            }
          }
        >
          actions
        </div>,
      ],
      "author": "Comment author",
      "avatar": <AvatarBlock
        basePath=""
        blockId="undefined_id"
        components={
          Object {
            "Icon": [Function],
            "Link": [Function],
          }
        }
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "content": "Co",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "children": undefined,
      "content": "Comment content for user",
      "datetime": "This is not the time",
      "id": "areas.actions",
    },
    Object {},
  ],
]
`;

exports[`Mock render - default - value[0] - Comment 1`] = `
Array [
  Array [
    Object {
      "actions": Array [
        undefined,
      ],
      "author": undefined,
      "avatar": <AvatarBlock
        basePath=""
        blockId="undefined_id"
        components={
          Object {
            "Icon": [Function],
            "Link": [Function],
          }
        }
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={Object {}}
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "children": undefined,
      "content": <div
        data-testid="area-content"
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "datetime": undefined,
      "id": "default",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.author - value[0] - Comment 1`] = `
Array [
  Array [
    Object {
      "actions": Array [
        undefined,
      ],
      "author": "Comment author",
      "avatar": <AvatarBlock
        basePath=""
        blockId="undefined_id"
        components={
          Object {
            "Icon": [Function],
            "Link": [Function],
          }
        }
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "content": "Co",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "children": undefined,
      "content": <div
        data-testid="area-content"
        style={
          Object {
            "border": "1px solid red",
            "padding": 10,
          }
        }
      >
        content
      </div>,
      "datetime": undefined,
      "id": "properties.author",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.content - value[0] - Comment 1`] = `
Array [
  Array [
    Object {
      "actions": Array [
        undefined,
      ],
      "author": "Comment author",
      "avatar": <AvatarBlock
        basePath=""
        blockId="undefined_id"
        components={
          Object {
            "Icon": [Function],
            "Link": [Function],
          }
        }
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "content": "Co",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "children": undefined,
      "content": "Comment content for user",
      "datetime": undefined,
      "id": "properties.content",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.datetime - value[0] - Comment 1`] = `
Array [
  Array [
    Object {
      "actions": Array [
        undefined,
      ],
      "author": "Comment author",
      "avatar": <AvatarBlock
        basePath=""
        blockId="undefined_id"
        components={
          Object {
            "Icon": [Function],
            "Link": [Function],
          }
        }
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "content": "Co",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "children": undefined,
      "content": "Comment content for user",
      "datetime": "2020-01-20T00:00:00.000Z",
      "id": "properties.datetime",
    },
    Object {},
  ],
]
`;
