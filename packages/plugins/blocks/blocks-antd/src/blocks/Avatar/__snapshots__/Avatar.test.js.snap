// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render default - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="default"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render properties.alt - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.alt"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render properties.color - value[0] 1`] = `
.emotion-0 {
  background-color: #f12345;
}

<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.color"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render properties.content - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.content"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    Avatar
  </span>
</span>
`;

exports[`Render properties.content - value[0] 2`] = `
.emotion-0 {
  border: 1px solid red;
}

<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.content"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    Avatar
  </span>
</span>
`;

exports[`Render properties.gap - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.gap"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    Avatar
  </span>
</span>
`;

exports[`Render properties.icon object - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-icon emotion-0"
  id="properties.icon object"
>
  <span
    class="anticon"
    role="img"
  >
    <svg
      data-testid="AiOutlineExclamationCircle"
    >
      {"id":"properties.icon object_icon","title":"AiOutlineUser","className":"css-0","color":"red","required":false}
    </svg>
  </span>
</span>
`;

exports[`Render properties.icon string - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-icon emotion-0"
  id="properties.icon string"
>
  <span
    class="anticon"
    role="img"
  >
    <svg
      data-testid="AiOutlineExclamationCircle"
    >
      {"id":"properties.icon string_icon","title":"AiOutlineUser","className":"css-0","required":false}
    </svg>
  </span>
</span>
`;

exports[`Render properties.icon string properties.shape square - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-square ant-avatar-icon emotion-0"
  id="properties.icon string properties.shape square"
>
  <span
    class="anticon"
    role="img"
  >
    <svg
      data-testid="AiOutlineExclamationCircle"
    >
      {"id":"properties.icon string properties.shape square_icon","title":"AiOutlineUser","className":"css-0","required":false}
    </svg>
  </span>
</span>
`;

exports[`Render properties.shape - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-square emotion-0"
  id="properties.shape"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render properties.size large - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-lg ant-avatar-circle emotion-0"
  id="properties.size large"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render properties.size small - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-sm ant-avatar-circle emotion-0"
  id="properties.size small"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render properties.src - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-image emotion-0"
  id="properties.src"
>
  <img
    src="https://docs.lowdefy.com/images/favicon.png"
  />
</span>
`;

exports[`Render required = true default - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="default"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render required = true properties.alt - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.alt"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render required = true properties.color - value[0] 1`] = `
.emotion-0 {
  background-color: #f12345;
}

<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.color"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render required = true properties.content - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.content"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    Avatar
  </span>
</span>
`;

exports[`Render required = true properties.content - value[0] 2`] = `
.emotion-0 {
  border: 1px solid red;
}

<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.content"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    Avatar
  </span>
</span>
`;

exports[`Render required = true properties.gap - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle emotion-0"
  id="properties.gap"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  >
    Avatar
  </span>
</span>
`;

exports[`Render required = true properties.icon object - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-icon emotion-0"
  id="properties.icon object"
>
  <span
    class="anticon"
    role="img"
  >
    <svg
      data-testid="AiOutlineExclamationCircle"
    >
      {"id":"properties.icon object_icon","title":"AiOutlineUser","className":"css-0","color":"red","required":false}
    </svg>
  </span>
</span>
`;

exports[`Render required = true properties.icon string - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-icon emotion-0"
  id="properties.icon string"
>
  <span
    class="anticon"
    role="img"
  >
    <svg
      data-testid="AiOutlineExclamationCircle"
    >
      {"id":"properties.icon string_icon","title":"AiOutlineUser","className":"css-0","required":false}
    </svg>
  </span>
</span>
`;

exports[`Render required = true properties.icon string properties.shape square - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-square ant-avatar-icon emotion-0"
  id="properties.icon string properties.shape square"
>
  <span
    class="anticon"
    role="img"
  >
    <svg
      data-testid="AiOutlineExclamationCircle"
    >
      {"id":"properties.icon string properties.shape square_icon","title":"AiOutlineUser","className":"css-0","required":false}
    </svg>
  </span>
</span>
`;

exports[`Render required = true properties.shape - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-square emotion-0"
  id="properties.shape"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render required = true properties.size large - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-lg ant-avatar-circle emotion-0"
  id="properties.size large"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render required = true properties.size small - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-sm ant-avatar-circle emotion-0"
  id="properties.size small"
>
  <span
    class="ant-avatar-string"
    style="transform: scale(1) translateX(-50%);"
  />
</span>
`;

exports[`Render required = true properties.src - value[0] 1`] = `
<span
  class="ant-avatar ant-avatar-circle ant-avatar-image emotion-0"
  id="properties.src"
>
  <img
    src="https://docs.lowdefy.com/images/favicon.png"
  />
</span>
`;

exports[`Test Schema default 1`] = `true`;

exports[`Test Schema default 2`] = `null`;

exports[`Test Schema properties.alt 1`] = `true`;

exports[`Test Schema properties.alt 2`] = `null`;

exports[`Test Schema properties.color 1`] = `true`;

exports[`Test Schema properties.color 2`] = `null`;

exports[`Test Schema properties.content 1`] = `true`;

exports[`Test Schema properties.content 2`] = `null`;

exports[`Test Schema properties.content 3`] = `true`;

exports[`Test Schema properties.content 4`] = `null`;

exports[`Test Schema properties.gap 1`] = `true`;

exports[`Test Schema properties.gap 2`] = `null`;

exports[`Test Schema properties.icon object 1`] = `true`;

exports[`Test Schema properties.icon object 2`] = `null`;

exports[`Test Schema properties.icon string 1`] = `true`;

exports[`Test Schema properties.icon string 2`] = `null`;

exports[`Test Schema properties.icon string properties.shape square 1`] = `true`;

exports[`Test Schema properties.icon string properties.shape square 2`] = `null`;

exports[`Test Schema properties.shape 1`] = `true`;

exports[`Test Schema properties.shape 2`] = `null`;

exports[`Test Schema properties.size large 1`] = `true`;

exports[`Test Schema properties.size large 2`] = `null`;

exports[`Test Schema properties.size small 1`] = `true`;

exports[`Test Schema properties.size small 2`] = `null`;

exports[`Test Schema properties.src 1`] = `true`;

exports[`Test Schema properties.src 2`] = `null`;
