// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - Label 1`] = `mocked`;

exports[`Mock render - default - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="default_input"
            title="default"
          >
            <HtmlComponent
              html="default"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "default",
    },
    Object {},
  ],
]
`;

exports[`Mock render - default - value[0] - Label 3`] = `Array []`;

exports[`Mock render - inline and long extra default size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - inline and long extra default size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="inline and long extra default size_input"
            title="Lorem ipsum dolor sit amet
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "inline and long extra default size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - inline and long extra default size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - inline and long extra large size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - inline and long extra large size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}"
            htmlFor="inline and long extra large size_input"
            title="Lorem ipsum dolor sit amet
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "inline and long extra large size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - inline and long extra large size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - inline and long extra small size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - inline and long extra small size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":0}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}"
            htmlFor="inline and long extra small size_input"
            title="Lorem ipsum dolor sit amet
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":-4},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "inline and long extra small size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - inline and long extra small size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.align: left - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.align: left - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.align: left_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.align: left",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.align: left - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.align: right - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.align: right - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.align: right_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.align: right",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.align: right - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.colon: false - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.colon: false - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="ant-form-item-no-colon {\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.colon: false_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.colon: false",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.colon: false - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.colon: true - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.colon: true - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.colon: true_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.colon: true",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.colon: true - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.disabled: true - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.disabled: true - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        false,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.disabled: true",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.disabled: true - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extra: Extra long - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extra: Extra long - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.extra: Extra long_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.extra: Extra long",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extra: Extra long - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extra: Extra long with inline = true - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extra: Extra long with inline = true - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.extra: Extra long with inline = true_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "properties.extra: Extra long with inline = true",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extra: Extra long with inline = true - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extra: Extra long with inline = true, size = large - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extra: Extra long with inline = true, size = large - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}"
            htmlFor="properties.extra: Extra long with inline = true, size = large_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "properties.extra: Extra long with inline = true, size = large",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extra: Extra long with inline = true, size = large - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extra: Extra long with inline = true, size = small - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extra: Extra long with inline = true, size = small - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":0}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}"
            htmlFor="properties.extra: Extra long with inline = true, size = small_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":-4},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "properties.extra: Extra long with inline = true, size = small",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extra: Extra long with inline = true, size = small - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extra: Extra long with inline true - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extra: Extra long with inline true - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.extra: Extra long with inline true_input"
            title="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "properties.extra: Extra long with inline true",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extra: Extra long with inline true - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extra: Extra text - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extra: Extra text - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.extra: Extra text_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Extra text"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.extra: Extra text",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extra: Extra text - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extra: html in extra - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extra: html in extra - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.extra: html in extra_input"
            title="label title"
          >
            <HtmlComponent
              html="label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html=<span style="background:yellow;">
  html in extra
</span>
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.extra: html in extra",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extra: html in extra - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.extraStyle: border 1px purple - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.extraStyle: border 1px purple - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.extraStyle: border 1px purple_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          Object {
                            "border": "1px solid purple",
                          },
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},{\\"border\\":\\"1px solid purple\\"}]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},{\\"border\\":\\"1px solid purple\\"}]}"
          >
            <HtmlComponent
              html="Extra text"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          Object {
                            "border": "1px solid purple",
                          },
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},{\\"border\\":\\"1px solid purple\\"}]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.extraStyle: border 1px purple",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.extraStyle: border 1px purple - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.feedbackStyle: border 1px blue - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.feedbackStyle: border 1px blue - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.feedbackStyle: border 1px blue_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          Object {
                            "border": "1px solid blue",
                          },
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},{\\"border\\":\\"1px solid blue\\"}]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="The extra content"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          Object {
                            "border": "1px solid blue",
                          },
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},{\\"border\\":\\"1px solid blue\\"}]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.feedbackStyle: border 1px blue",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.feedbackStyle: border 1px blue - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.inline: true - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.inline: true - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}"
          flex="0 1 auto"
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.inline: true_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": "inherit",
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": "inherit",
                          "whiteSpace": false,
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"overflow\\":\\"inherit\\",\\"whiteSpace\\":false,\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          flex="1 1 auto"
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"flexWrap\\":\\"inherit\\",\\"marginBottom\\":0}}",
      "id": "properties.inline: true",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.inline: true - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.span: 2 - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.span: 2 - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          md={
            Object {
              "span": 2,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.span: 2_input"
            title="This is the long label title wrapped by short span"
          >
            <HtmlComponent
              html="This is the long label title wrapped by short span"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 22,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.span: 2",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.span: 2 - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.span: 2 with long work title - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.span: 2 with long work title - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          md={
            Object {
              "span": 2,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.span: 2 with long work title_input"
            title="Thisisthelonglabeltitlea"
          >
            <HtmlComponent
              html="Thisisthelonglabeltitlea"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 22,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.span: 2 with long work title",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.span: 2 with long work title - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.title - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.title - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.title_input"
            title="Label title"
          >
            <HtmlComponent
              html="Label title"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.title",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.title long - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.title long - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.title long_input"
            title="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.title long",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title long - value[0] - Label 3`] = `Array []`;

exports[`Mock render - properties.title: html in title - value[0] - Label 1`] = `mocked`;

exports[`Mock render - properties.title: html in title - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label ant-form-item-label-left {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="properties.title: html in title_input"
            title=<span style="background:yellow;">
  html in title
</span>
          >
            <HtmlComponent
              html=<span style="background:yellow;">
  html in title
</span>
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "properties.title: html in title",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title: html in title - value[0] - Label 3`] = `Array []`;

exports[`Mock render - span, align right and long extra for default size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - span, align right and long extra for default size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          md={
            Object {
              "span": 8,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="span, align right and long extra for default size_input"
            title="Lorem
"
          >
            <HtmlComponent
              html="Lorem
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 16,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "span, align right and long extra for default size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - span, align right and long extra for default size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - span, align right and long extra for large size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - span, align right and long extra for large size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          md={
            Object {
              "span": 8,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}"
            htmlFor="span, align right and long extra for large size_input"
            title="Lorem
"
          >
            <HtmlComponent
              html="Lorem
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 16,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "span, align right and long extra for large size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - span, align right and long extra for large size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - span, align right and long extra for small size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - span, align right and long extra for small size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":0}}"
          md={
            Object {
              "span": 8,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}"
            htmlFor="span, align right and long extra for small size_input"
            title="Lorem
"
          >
            <HtmlComponent
              html="Lorem
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 16,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":-4},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "span, align right and long extra for small size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - span, align right and long extra for small size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - span, align right, long title and long extra for default size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - span, align right, long title and long extra for default size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          md={
            Object {
              "span": 8,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}"
            htmlFor="span, align right, long title and long extra for default size_input"
            title="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 16,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 32,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":32},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "span, align right, long title and long extra for default size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - span, align right, long title and long extra for default size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - span, align right, long title and long extra for large size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - span, align right, long title and long extra for large size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}"
          md={
            Object {
              "span": 8,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}"
            htmlFor="span, align right, long title and long extra for large size_input"
            title="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 16,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":0},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 8,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 40,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": 0,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":8}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":40},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":0},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "span, align right, long title and long extra for large size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - span, align right, long title and long extra for large size - value[0] - Label 3`] = `Array []`;

exports[`Mock render - span, align right, long title and long extra for small size - value[0] - Label 1`] = `mocked`;

exports[`Mock render - span, align right, long title and long extra for small size - value[0] - Label 2`] = `
Array [
  Array [
    Object {
      "children": Array [
        <mockConstructor
          className="ant-form-item-label {\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":0}}"
          md={
            Object {
              "span": 8,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <label
            className="{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}"
            htmlFor="span, align right, long title and long extra for small size_input"
            title="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </label>
        </mockConstructor>,
        <mockConstructor
          className="ant-form-item-control"
          md={
            Object {
              "span": 16,
            }
          }
          sm={
            Object {
              "span": 24,
            }
          }
          xs={
            Object {
              "span": 24,
            }
          }
        >
          <div
            className="ant-form-item-control-input"
          >
            <div
              className="ant-form-item-control-input-content"
            >
              <div
                data-testid="area-content"
                style={
                  Object {
                    "border": "1px solid red",
                    "padding": 10,
                  }
                }
              >
                content
              </div>
            </div>
          </div>
          <CSSMotion
            motionAppear={true}
            motionName="show-help"
            removeOnLeave={true}
            visible={false}
          >
            [Function]
          </CSSMotion>
          <div
            className="ant-form-item-explain ant-form-item-extra {\\"style\\":[{\\"marginTop\\":-4},null]}"
          >
            <HtmlComponent
              html="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commod
"
              methods={
                Object {
                  "makeCssClass": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "flexWrap": undefined,
                          "marginBottom": 0,
                        },
                      ],
                      Array [
                        Object {
                          "marginBottom": 0,
                          "overflow": undefined,
                          "whiteSpace": "normal",
                        },
                      ],
                      Array [
                        Array [
                          Object {
                            "height": "fit-content !important",
                            "minHeight": 24,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                      Array [
                        Array [
                          Object {
                            "marginTop": -4,
                          },
                          undefined,
                        ],
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":{\\"whiteSpace\\":\\"normal\\",\\"marginBottom\\":0}}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"height\\":\\"fit-content !important\\",\\"minHeight\\":24},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                      Object {
                        "type": "return",
                        "value": "{\\"style\\":[{\\"marginTop\\":-4},null]}",
                      },
                    ],
                  },
                  "registerEvent": [Function],
                  "registerMethod": [Function],
                  "triggerEvent": [Function],
                }
              }
            />
          </div>
        </mockConstructor>,
      ],
      "className": "ant-form-item {\\"style\\":{\\"marginBottom\\":0}}",
      "id": "span, align right, long title and long extra for small size",
    },
    Object {},
  ],
]
`;

exports[`Mock render - span, align right, long title and long extra for small size - value[0] - Label 3`] = `Array []`;
