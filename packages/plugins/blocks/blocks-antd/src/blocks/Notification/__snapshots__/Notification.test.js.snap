// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - default - value[0] - Notification 1`] = `
<div
  id="default"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - default - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - default - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - default - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - default - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "default_notification",
      "message": <HtmlComponent
        html="default"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - default - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.bottom: 250 placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": 250,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.bottom: 250 placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.button: icon - value[0] - Notification 1`] = `
<div
  id="properties.button: icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.button: icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.button: icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.button: icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.button: icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": <ButtonBlock
        basePath=""
        blockId="properties.button: icon_button"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        onClick={[Function]}
        properties={
          Object {
            "icon": "AiOutlineSave",
            "title": "Close",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.button: icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.button: icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 1`] = `
<div
  id="properties.closeIcon: AiOutlineAlert"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": <AntIcon
        basePath=""
        blockId="properties.closeIcon: AiOutlineAlert_closeIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineAlert"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.closeIcon: AiOutlineAlert_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.description: - value[0] - Notification 1`] = `
<div
  id="properties.description:"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.description: - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.description: - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.description: - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.description: - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.description:_notification",
      "message": <HtmlComponent
        html="properties.description:"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.description: - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.duration: 6 - value[0] - Notification 1`] = `
<div
  id="properties.duration: 6"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.duration: 6 - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.duration: 6 - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.duration: 6 - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.duration: 6 - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": 6,
      "icon": undefined,
      "id": "properties.duration: 6_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.duration: 6 - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.icon - value[0] - Notification 1`] = `
<div
  id="properties.icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiFillAccountBook"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.message - value[0] - Notification 1`] = `
<div
  id="properties.message"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.message - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.message - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.message - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.message - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.message_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.message - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomRight - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomRight"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomRight - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomRight - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomRight - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomRight - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomRight_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomRight",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: bottomRight - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: error - value[0] - Notification 1`] = `
<div
  id="properties.status: error"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: error - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: error - value[0] - Notification 3`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: error_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: error - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: error - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: error - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: info - value[0] - Notification 1`] = `
<div
  id="properties.status: info"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: info - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: info - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: info - value[0] - Notification 4`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: info_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: info - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: info - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: warning - value[0] - Notification 1`] = `
<div
  id="properties.status: warning"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: warning - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: warning - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: warning - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: warning - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.status: warning - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: warning_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.top: 250 placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.top: 250 placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.top: 250 placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.top: 250 placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.top: 250 placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.top: 250 placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.top: 250 placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": 250,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - properties.top: 250 placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with description uses html - value[0] - Notification 1`] = `
<div
  id="with description uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with description uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with description uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with description uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with description uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "with description uses html_notification",
      "message": <HtmlComponent
        html="with description uses html"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with description uses html - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with message uses html - value[0] - Notification 1`] = `
<div
  id="with message uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with message uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with message uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with message uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with message uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Args description"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "with message uses html_notification",
      "message": <HtmlComponent
        html=<div style="background:red;">
  Notification Message
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"description":"Args description"}} - with message uses html - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - default - value[0] - Notification 1`] = `
<div
  id="default"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - default - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - default - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - default - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - default - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "default_notification",
      "message": <HtmlComponent
        html="default"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - default - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.bottom: 250 placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": 250,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.bottom: 250 placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.button: icon - value[0] - Notification 1`] = `
<div
  id="properties.button: icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.button: icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.button: icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.button: icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.button: icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": <ButtonBlock
        basePath=""
        blockId="properties.button: icon_button"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        onClick={[Function]}
        properties={
          Object {
            "icon": "AiOutlineSave",
            "title": "Close",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.button: icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.button: icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 1`] = `
<div
  id="properties.closeIcon: AiOutlineAlert"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": <AntIcon
        basePath=""
        blockId="properties.closeIcon: AiOutlineAlert_closeIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineAlert"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.closeIcon: AiOutlineAlert_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.description: - value[0] - Notification 1`] = `
<div
  id="properties.description:"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.description: - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.description: - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.description: - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.description: - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": 1,
      "icon": undefined,
      "id": "properties.description:_notification",
      "message": <HtmlComponent
        html="properties.description:"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.description: - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.duration: 6 - value[0] - Notification 1`] = `
<div
  id="properties.duration: 6"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.duration: 6 - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.duration: 6 - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.duration: 6 - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.duration: 6 - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.duration: 6_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.duration: 6 - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.icon - value[0] - Notification 1`] = `
<div
  id="properties.icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiFillAccountBook"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.message - value[0] - Notification 1`] = `
<div
  id="properties.message"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.message - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.message - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.message - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.message - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.message_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.message - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomRight - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomRight"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomRight - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomRight - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomRight - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomRight - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.placement: bottomRight_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomRight",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: bottomRight - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: error - value[0] - Notification 1`] = `
<div
  id="properties.status: error"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: error - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: error - value[0] - Notification 3`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.status: error_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: error - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: error - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: error - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: info - value[0] - Notification 1`] = `
<div
  id="properties.status: info"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: info - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: info - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: info - value[0] - Notification 4`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.status: info_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: info - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: info - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: warning - value[0] - Notification 1`] = `
<div
  id="properties.status: warning"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: warning - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: warning - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: warning - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: warning - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.status: warning - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": 1,
      "icon": undefined,
      "id": "properties.status: warning_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.top: 250 placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.top: 250 placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.top: 250 placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.top: 250 placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.top: 250 placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.top: 250 placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "properties.top: 250 placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": 250,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - properties.top: 250 placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with description uses html - value[0] - Notification 1`] = `
<div
  id="with description uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with description uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with description uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with description uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with description uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html=<div style="background:green;">
  Notification Description
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": 1,
      "icon": undefined,
      "id": "with description uses html_notification",
      "message": <HtmlComponent
        html="with description uses html"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with description uses html - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with message uses html - value[0] - Notification 1`] = `
<div
  id="with message uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with message uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with message uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with message uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with message uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 1,
      "icon": undefined,
      "id": "with message uses html_notification",
      "message": <HtmlComponent
        html=<div style="background:red;">
  Notification Message
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"duration":1}} - with message uses html - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - default - value[0] - Notification 1`] = `
<div
  id="default"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - default - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - default - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - default - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - default - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "default_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - default - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.bottom: 250 placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": 250,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.bottom: 250 placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.button: icon - value[0] - Notification 1`] = `
<div
  id="properties.button: icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.button: icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.button: icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.button: icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.button: icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": <ButtonBlock
        basePath=""
        blockId="properties.button: icon_button"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        onClick={[Function]}
        properties={
          Object {
            "icon": "AiOutlineSave",
            "title": "Close",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.button: icon_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.button: icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 1`] = `
<div
  id="properties.closeIcon: AiOutlineAlert"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": <AntIcon
        basePath=""
        blockId="properties.closeIcon: AiOutlineAlert_closeIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineAlert"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.closeIcon: AiOutlineAlert_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.description: - value[0] - Notification 1`] = `
<div
  id="properties.description:"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.description: - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.description: - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.description: - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.description: - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.description:_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.description: - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.duration: 6 - value[0] - Notification 1`] = `
<div
  id="properties.duration: 6"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.duration: 6 - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.duration: 6 - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.duration: 6 - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.duration: 6 - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 6,
      "icon": undefined,
      "id": "properties.duration: 6_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.duration: 6 - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.icon - value[0] - Notification 1`] = `
<div
  id="properties.icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiFillAccountBook"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.message - value[0] - Notification 1`] = `
<div
  id="properties.message"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.message - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.message - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.message - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.message - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.message_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.message - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomRight - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomRight"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomRight - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomRight - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomRight - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomRight - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomRight_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomRight",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: bottomRight - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: topLeft_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: error - value[0] - Notification 1`] = `
<div
  id="properties.status: error"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: error - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: error - value[0] - Notification 3`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: error_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: error - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: error - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: error - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: info - value[0] - Notification 1`] = `
<div
  id="properties.status: info"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: info - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: info - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: info - value[0] - Notification 4`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: info_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: info - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: info - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: warning - value[0] - Notification 1`] = `
<div
  id="properties.status: warning"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: warning - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: warning - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: warning - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: warning - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.status: warning - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: warning_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.top: 250 placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.top: 250 placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.top: 250 placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.top: 250 placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.top: 250 placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.top: 250 placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.top: 250 placement: topLeft_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": 250,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - properties.top: 250 placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with description uses html - value[0] - Notification 1`] = `
<div
  id="with description uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with description uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with description uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with description uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with description uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html=<div style="background:green;">
  Notification Description
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "with description uses html_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with description uses html - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with message uses html - value[0] - Notification 1`] = `
<div
  id="with message uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with message uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with message uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with message uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with message uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "with message uses html_notification",
      "message": <HtmlComponent
        html="Args message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"message":"Args message"}} - with message uses html - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - default - value[0] - Notification 1`] = `
<div
  id="default"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - default - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - default - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - default - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - default - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - default - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "default_notification",
      "message": <HtmlComponent
        html="default"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.bottom: 250 placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": 250,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.bottom: 250 placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.button: icon - value[0] - Notification 1`] = `
<div
  id="properties.button: icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.button: icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.button: icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.button: icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.button: icon - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.button: icon - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": <ButtonBlock
        basePath=""
        blockId="properties.button: icon_button"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        onClick={[Function]}
        properties={
          Object {
            "icon": "AiOutlineSave",
            "title": "Close",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.button: icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 1`] = `
<div
  id="properties.closeIcon: AiOutlineAlert"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": <AntIcon
        basePath=""
        blockId="properties.closeIcon: AiOutlineAlert_closeIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineAlert"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.closeIcon: AiOutlineAlert_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.description: - value[0] - Notification 1`] = `
<div
  id="properties.description:"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.description: - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.description: - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.description: - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.description: - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.description: - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.description:_notification",
      "message": <HtmlComponent
        html="properties.description:"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.duration: 6 - value[0] - Notification 1`] = `
<div
  id="properties.duration: 6"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.duration: 6 - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.duration: 6 - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.duration: 6 - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.duration: 6 - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.duration: 6 - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 6,
      "icon": undefined,
      "id": "properties.duration: 6_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.icon - value[0] - Notification 1`] = `
<div
  id="properties.icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.icon - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.icon - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiFillAccountBook"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.message - value[0] - Notification 1`] = `
<div
  id="properties.message"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.message - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.message - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.message - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.message - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.message - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.message_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomLeft - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomLeft - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomRight - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomRight"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomRight - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomRight - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomRight - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomRight - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: bottomRight - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomRight_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomRight",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: topLeft - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.placement: topLeft - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: error - value[0] - Notification 1`] = `
<div
  id="properties.status: error"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: error - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: error - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: error - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: error - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: error - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: error_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: info - value[0] - Notification 1`] = `
<div
  id="properties.status: info"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: info - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: info - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: info - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: info - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: info - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: info_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: warning - value[0] - Notification 1`] = `
<div
  id="properties.status: warning"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: warning - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: warning - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: warning - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: warning - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.status: warning - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: warning_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.top: 250 placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.top: 250 placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.top: 250 placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.top: 250 placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.top: 250 placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.top: 250 placement: topLeft - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - properties.top: 250 placement: topLeft - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.top: 250 placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": 250,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with description uses html - value[0] - Notification 1`] = `
<div
  id="with description uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with description uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with description uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with description uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with description uses html - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with description uses html - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html=<div style="background:green;">
  Notification Description
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "with description uses html_notification",
      "message": <HtmlComponent
        html="with description uses html"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with message uses html - value[0] - Notification 1`] = `
<div
  id="with message uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with message uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with message uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with message uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with message uses html - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{"status":"warning"}} - with message uses html - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "with message uses html_notification",
      "message": <HtmlComponent
        html=<div style="background:red;">
  Notification Message
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - default - value[0] - Notification 1`] = `
<div
  id="default"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - default - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - default - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - default - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - default - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "default_notification",
      "message": <HtmlComponent
        html="default"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - default - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.bottom: 250 placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": 250,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.bottom: 250 placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.bottom: 250 placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.button: icon - value[0] - Notification 1`] = `
<div
  id="properties.button: icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.button: icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.button: icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.button: icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.button: icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": <ButtonBlock
        basePath=""
        blockId="properties.button: icon_button"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        onClick={[Function]}
        properties={
          Object {
            "icon": "AiOutlineSave",
            "title": "Close",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.button: icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.button: icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 1`] = `
<div
  id="properties.closeIcon: AiOutlineAlert"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": <AntIcon
        basePath=""
        blockId="properties.closeIcon: AiOutlineAlert_closeIcon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiOutlineAlert"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.closeIcon: AiOutlineAlert_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.closeIcon: AiOutlineAlert - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.description: - value[0] - Notification 1`] = `
<div
  id="properties.description:"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.description: - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.description: - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.description: - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.description: - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.description:_notification",
      "message": <HtmlComponent
        html="properties.description:"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.description: - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.duration: 6 - value[0] - Notification 1`] = `
<div
  id="properties.duration: 6"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.duration: 6 - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.duration: 6 - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.duration: 6 - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.duration: 6 - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": 6,
      "icon": undefined,
      "id": "properties.duration: 6_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.duration: 6 - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.icon - value[0] - Notification 1`] = `
<div
  id="properties.icon"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.icon - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.icon - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.icon - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.icon - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties="AiFillAccountBook"
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.icon - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.message - value[0] - Notification 1`] = `
<div
  id="properties.message"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.message - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.message - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.message - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.message - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.message_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.message - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomRight - value[0] - Notification 1`] = `
<div
  id="properties.placement: bottomRight"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomRight - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomRight - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomRight - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomRight - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: bottomRight_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "bottomRight",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: bottomRight - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: error - value[0] - Notification 1`] = `
<div
  id="properties.status: error"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: error - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: error - value[0] - Notification 3`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: error_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: error - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: error - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: error - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: info - value[0] - Notification 1`] = `
<div
  id="properties.status: info"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: info - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: info - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: info - value[0] - Notification 4`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: info_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: info - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: info - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: warning - value[0] - Notification 1`] = `
<div
  id="properties.status: warning"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: warning - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: warning - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: warning - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: warning - value[0] - Notification 5`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.status: warning - value[0] - Notification 6`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html="Notification status type."
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.status: warning_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.top: 250 placement: topLeft - value[0] - Notification 1`] = `
<div
  id="properties.top: 250 placement: topLeft"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.top: 250 placement: topLeft - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.top: 250 placement: topLeft - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.top: 250 placement: topLeft - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - properties.top: 250 placement: topLeft - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "properties.top: 250 placement: topLeft_notification",
      "message": <HtmlComponent
        html="Notification message"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": "topLeft",
      "top": 250,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - properties.top: 250 placement: topLeft - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with description uses html - value[0] - Notification 1`] = `
<div
  id="with description uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - with description uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with description uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with description uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with description uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": <HtmlComponent
        html=<div style="background:green;">
  Notification Description
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "duration": undefined,
      "icon": undefined,
      "id": "with description uses html_notification",
      "message": <HtmlComponent
        html="with description uses html"
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - with description uses html - value[0] - Notification 6`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with message uses html - value[0] - Notification 1`] = `
<div
  id="with message uses html"
/>
`;

exports[`Mock for method: {"name":"open","args":{}} - with message uses html - value[0] - Notification 2`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with message uses html - value[0] - Notification 3`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with message uses html - value[0] - Notification 4`] = `Array []`;

exports[`Mock for method: {"name":"open","args":{}} - with message uses html - value[0] - Notification 5`] = `
Array [
  Array [
    Object {
      "bottom": undefined,
      "btn": undefined,
      "className": "css-0",
      "closeIcon": undefined,
      "description": undefined,
      "duration": undefined,
      "icon": undefined,
      "id": "with message uses html_notification",
      "message": <HtmlComponent
        html=<div style="background:red;">
  Notification Message
</div>
        methods={
          Object {
            "makeCssClass": [Function],
            "moveItemDown": [MockFunction],
            "moveItemUp": [MockFunction],
            "open": [Function],
            "pushItem": [MockFunction],
            "registerEvent": [MockFunction],
            "registerMethod": [Function],
            "removeItem": [MockFunction],
            "setValue": [MockFunction],
            "triggerEvent": [MockFunction],
            "unshiftItem": [MockFunction],
          }
        }
      />,
      "onClick": [Function],
      "onClose": [Function],
      "placement": undefined,
      "top": undefined,
    },
  ],
]
`;

exports[`Mock for method: {"name":"open","args":{}} - with message uses html - value[0] - Notification 6`] = `Array []`;

exports[`Test Schema default 1`] = `true`;

exports[`Test Schema default 2`] = `null`;

exports[`Test Schema properties.bottom: 250 placement: bottomLeft 1`] = `true`;

exports[`Test Schema properties.bottom: 250 placement: bottomLeft 2`] = `null`;

exports[`Test Schema properties.button: icon 1`] = `true`;

exports[`Test Schema properties.button: icon 2`] = `null`;

exports[`Test Schema properties.closeIcon: AiOutlineAlert 1`] = `true`;

exports[`Test Schema properties.closeIcon: AiOutlineAlert 2`] = `null`;

exports[`Test Schema properties.description: 1`] = `true`;

exports[`Test Schema properties.description: 2`] = `null`;

exports[`Test Schema properties.duration: 6 1`] = `true`;

exports[`Test Schema properties.duration: 6 2`] = `null`;

exports[`Test Schema properties.icon 1`] = `true`;

exports[`Test Schema properties.icon 2`] = `null`;

exports[`Test Schema properties.message 1`] = `true`;

exports[`Test Schema properties.message 2`] = `null`;

exports[`Test Schema properties.placement: bottomLeft 1`] = `true`;

exports[`Test Schema properties.placement: bottomLeft 2`] = `null`;

exports[`Test Schema properties.placement: bottomRight 1`] = `true`;

exports[`Test Schema properties.placement: bottomRight 2`] = `null`;

exports[`Test Schema properties.placement: topLeft 1`] = `true`;

exports[`Test Schema properties.placement: topLeft 2`] = `null`;

exports[`Test Schema properties.status: error 1`] = `true`;

exports[`Test Schema properties.status: error 2`] = `null`;

exports[`Test Schema properties.status: info 1`] = `true`;

exports[`Test Schema properties.status: info 2`] = `null`;

exports[`Test Schema properties.status: warning 1`] = `true`;

exports[`Test Schema properties.status: warning 2`] = `null`;

exports[`Test Schema properties.top: 250 placement: topLeft 1`] = `true`;

exports[`Test Schema properties.top: 250 placement: topLeft 2`] = `null`;

exports[`Test Schema with description uses html 1`] = `true`;

exports[`Test Schema with description uses html 2`] = `null`;

exports[`Test Schema with message uses html 1`] = `true`;

exports[`Test Schema with message uses html 2`] = `null`;
