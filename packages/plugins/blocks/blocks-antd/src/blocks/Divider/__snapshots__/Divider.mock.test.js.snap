// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - default - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - default - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": undefined,
      "dashed": undefined,
      "id": "default",
      "orientation": undefined,
      "plain": undefined,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.dashed: true - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.dashed: true - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": undefined,
      "dashed": true,
      "id": "properties.dashed: true",
      "orientation": undefined,
      "plain": undefined,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.orientation: center - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.orientation: center - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html="Divider title"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "properties.orientation: center",
      "orientation": "center",
      "plain": undefined,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.orientation: left - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.orientation: left - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html="Divider title"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "properties.orientation: left",
      "orientation": "left",
      "plain": undefined,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.orientation: right - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.orientation: right - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html="Divider title"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "properties.orientation: right",
      "orientation": "right",
      "plain": undefined,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.title - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html="Divider title"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "properties.title",
      "orientation": undefined,
      "plain": undefined,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: horizontal - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.type: horizontal - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html="Divider title"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "properties.type: horizontal",
      "orientation": undefined,
      "plain": undefined,
      "style": undefined,
      "type": "horizontal",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: true - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.type: true - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html="Divider title"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "properties.type: true",
      "orientation": undefined,
      "plain": true,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.type: vertical - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - properties.type: vertical - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html="Divider title"
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "properties.type: vertical",
      "orientation": undefined,
      "plain": undefined,
      "style": undefined,
      "type": "vertical",
    },
    Object {},
  ],
]
`;

exports[`Mock render - with html in title - value[0] - Divider 1`] = `mocked`;

exports[`Mock render - with html in title - value[0] - Divider 2`] = `
Array [
  Array [
    Object {
      "children": <HtmlComponent
        html=<div style="background-color:yellow">
  Html Title
</div>
        methods={
          Object {
            "makeCssClass": [MockFunction],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
      />,
      "dashed": undefined,
      "id": "with html in title",
      "orientation": undefined,
      "plain": undefined,
      "style": undefined,
      "type": undefined,
    },
    Object {},
  ],
]
`;
