// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render default - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal"
  id="default"
  role="separator"
/>
`;

exports[`Render properties.dashed: true - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-dashed"
  id="properties.dashed: true"
  role="separator"
/>
`;

exports[`Render properties.orientation: center - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="properties.orientation: center"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render properties.orientation: left - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-left"
  id="properties.orientation: left"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render properties.orientation: right - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-right"
  id="properties.orientation: right"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render properties.title - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="properties.title"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render properties.type: horizontal - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="properties.type: horizontal"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render properties.type: true - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center ant-divider-plain"
  id="properties.type: true"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render properties.type: vertical - value[0] 1`] = `
<div
  class="ant-divider ant-divider-vertical ant-divider-with-text ant-divider-with-text-center"
  id="properties.type: vertical"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true default - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal"
  id="default"
  role="separator"
/>
`;

exports[`Render required = true properties.dashed: true - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-dashed"
  id="properties.dashed: true"
  role="separator"
/>
`;

exports[`Render required = true properties.orientation: center - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="properties.orientation: center"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true properties.orientation: left - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-left"
  id="properties.orientation: left"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true properties.orientation: right - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-right"
  id="properties.orientation: right"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true properties.title - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="properties.title"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true properties.type: horizontal - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="properties.type: horizontal"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true properties.type: true - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center ant-divider-plain"
  id="properties.type: true"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true properties.type: vertical - value[0] 1`] = `
<div
  class="ant-divider ant-divider-vertical ant-divider-with-text ant-divider-with-text-center"
  id="properties.type: vertical"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      Divider title
    </span>
  </span>
</div>
`;

exports[`Render required = true with html in title - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="with html in title"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      <div
        style="background-color:yellow"
      >
        Html Title
      </div>
    </span>
  </span>
</div>
`;

exports[`Render with html in title - value[0] 1`] = `
<div
  class="ant-divider ant-divider-horizontal ant-divider-with-text ant-divider-with-text-center"
  id="with html in title"
  role="separator"
>
  <span
    class="ant-divider-inner-text"
  >
    <span
      class="emotion-0"
    >
      <div
        style="background-color:yellow"
      >
        Html Title
      </div>
    </span>
  </span>
</div>
`;

exports[`Test Schema default 1`] = `false`;

exports[`Test Schema default 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.dashed: true 1`] = `false`;

exports[`Test Schema properties.dashed: true 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.orientation: center 1`] = `false`;

exports[`Test Schema properties.orientation: center 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.orientation: left 1`] = `false`;

exports[`Test Schema properties.orientation: left 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.orientation: right 1`] = `false`;

exports[`Test Schema properties.orientation: right 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.title 1`] = `false`;

exports[`Test Schema properties.title 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.type: horizontal 1`] = `false`;

exports[`Test Schema properties.type: horizontal 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.type: true 1`] = `false`;

exports[`Test Schema properties.type: true 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema properties.type: vertical 1`] = `false`;

exports[`Test Schema properties.type: vertical 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;

exports[`Test Schema with html in title 1`] = `false`;

exports[`Test Schema with html in title 2`] = `
Array [
  Object {
    "instancePath": "/type",
    "keyword": "enum",
    "message": "must be equal to one of the allowed values",
    "params": Object {
      "allowedValues": Array [
        "horizontal",
        "vertical",
      ],
    },
    "schemaPath": "#/properties/type/enum",
  },
]
`;
