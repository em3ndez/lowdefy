// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mock render - backgroundColor: #016e1e - value[0] - MobileMenu 1`] = `
<div
  id="backgroundColor: #016e1e"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - backgroundColor: #016e1e - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\",\\"backgroundColor\\":\\"#016e1e\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="backgroundColor: #016e1e_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": "#016e1e",
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\",\\"backgroundColor\\":\\"#016e1e\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "backgroundColor": "#016e1e",
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_1_2",
                      "links": Array [
                        Object {
                          "id": "menu_item_1_2_1",
                          "pageId": "page_1_2_1",
                          "properties": Object {
                            "title": "Menu Group one",
                          },
                          "type": "MenuLink",
                        },
                        Object {
                          "id": "menu_item_1_2_2",
                          "pageId": "page_1_2_2",
                          "properties": Object {
                            "title": "Menu Group two",
                          },
                          "type": "MenuLink",
                        },
                      ],
                      "properties": Object {
                        "title": "Menu Group",
                      },
                      "type": "MenuGroup",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
                Object {
                  "id": "menu_item_2",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "menu_item_3",
                  "pageId": "page_3",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 3",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "selectedKeys": Array [
                "menu_item_1_1",
                "menu_item_3",
                "menu_item_1_2_2",
              ],
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "backgroundColor: #016e1e_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - backgroundColor: #016e1e - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="backgroundColor: #016e1e_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "backgroundColor: #016e1e_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - default - value[0] - MobileMenu 1`] = `
<div
  id="default"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - default - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="default_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "default_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - default - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="default_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "default_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - menus: default - value[0] - MobileMenu 1`] = `
<div
  id="menus: default"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - menus: default - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="menus: default_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={
            Array [
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "menu_group_1",
                    "links": Array [
                      Object {
                        "id": "menu_item_1_1",
                        "pageId": "page_1_1",
                        "properties": Object {
                          "title": "Menu Item one",
                        },
                        "type": "MenuLink",
                      },
                    ],
                    "properties": Object {
                      "title": "Menu Group 1",
                    },
                    "type": "MenuGroup",
                  },
                  Object {
                    "id": "menu_item_2",
                    "pageId": "page_2",
                    "properties": Object {
                      "icon": "AiFillVideoCamera",
                      "title": "Title Menu Item 2",
                    },
                    "type": "MenuLink",
                  },
                ],
                "menuId": "menu_one",
              },
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "default_menu_group_1",
                    "links": Array [
                      Object {
                        "id": "default_menu_item_1_1",
                        "pageId": "default_page_1_1",
                        "properties": Object {
                          "title": "default Menu Item one",
                        },
                        "type": "MenuLink",
                      },
                    ],
                    "properties": Object {
                      "title": "default Menu Group 1",
                    },
                    "type": "MenuGroup",
                  },
                ],
                "menuId": "default",
              },
            ]
          }
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "menus: default_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - menus: default - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="menus: default_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "menus: default_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - menus: links[0] - value[0] - MobileMenu 1`] = `
<div
  id="menus: links[0]"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - menus: links[0] - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="menus: links[0]_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={
            Array [
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "menu_group_1",
                    "links": Array [
                      Object {
                        "id": "menu_item_1_1",
                        "pageId": "page_1_1",
                        "properties": Object {
                          "title": "Menu Item one",
                        },
                        "type": "MenuLink",
                      },
                    ],
                    "properties": Object {
                      "title": "Menu Group 1",
                    },
                    "type": "MenuGroup",
                  },
                  Object {
                    "id": "menu_item_2",
                    "pageId": "page_2",
                    "properties": Object {
                      "icon": "AiFillVideoCamera",
                      "title": "Title Menu Item 2",
                    },
                    "type": "MenuLink",
                  },
                ],
                "menuId": "menu_one",
              },
            ]
          }
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "menus: links[0]_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - menus: links[0] - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="menus: links[0]_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "menus: links[0]_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - menus: properties.menuId: menu_one - value[0] - MobileMenu 1`] = `
<div
  id="menus: properties.menuId: menu_one"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - menus: properties.menuId: menu_one - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="menus: properties.menuId: menu_one_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={
            Array [
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "menu_group_1",
                    "links": Array [
                      Object {
                        "id": "menu_item_1_1",
                        "pageId": "page_1_1",
                        "properties": Object {
                          "title": "Menu Item one",
                        },
                        "type": "MenuLink",
                      },
                    ],
                    "properties": Object {
                      "title": "Menu Group 1",
                    },
                    "type": "MenuGroup",
                  },
                  Object {
                    "id": "menu_item_2",
                    "pageId": "page_2",
                    "properties": Object {
                      "icon": "AiFillVideoCamera",
                      "title": "Title Menu Item 2",
                    },
                    "type": "MenuLink",
                  },
                ],
                "menuId": "menu_one",
              },
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "default_menu_group_1",
                    "links": Array [
                      Object {
                        "id": "default_menu_item_1_1",
                        "pageId": "default_page_1_1",
                        "properties": Object {
                          "title": "default Menu Item one",
                        },
                        "type": "MenuLink",
                      },
                    ],
                    "properties": Object {
                      "title": "default Menu Group 1",
                    },
                    "type": "MenuGroup",
                  },
                ],
                "menuId": "default",
              },
            ]
          }
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "menuId": "menu_one",
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "menus: properties.menuId: menu_one_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - menus: properties.menuId: menu_one - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="menus: properties.menuId: menu_one_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "menus: properties.menuId: menu_one_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - menusTitle pageId - value[0] - MobileMenu 1`] = `
<div
  id="menusTitle pageId"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - menusTitle pageId - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="menusTitle pageId_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={
            Array [
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "menu_item_2",
                    "pageId": "pageId_page_2",
                    "properties": Object {
                      "icon": "AiFillVideoCamera",
                    },
                    "type": "MenuLink",
                  },
                ],
                "menuId": "menu_one",
              },
            ]
          }
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "menusTitle pageId_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - menusTitle pageId - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="menusTitle pageId_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "menusTitle pageId_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - menusTitle properties.title - value[0] - MobileMenu 1`] = `
<div
  id="menusTitle properties.title"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - menusTitle properties.title - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="menusTitle properties.title_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={
            Array [
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "menu_item_2",
                    "pageId": "page_2",
                    "properties": Object {
                      "icon": "AiFillVideoCamera",
                      "title": "Title Menu Item 2",
                    },
                    "type": "MenuLink",
                  },
                ],
                "menuId": "menu_one",
              },
            ]
          }
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "menusTitle properties.title_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - menusTitle properties.title - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="menusTitle properties.title_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "menusTitle properties.title_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - menusTitle url - value[0] - MobileMenu 1`] = `
<div
  id="menusTitle url"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - menusTitle url - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="menusTitle url_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={
            Array [
              Object {
                "id": "menu_one",
                "links": Array [
                  Object {
                    "id": "menu_item_2",
                    "properties": Object {
                      "icon": "AiFillVideoCamera",
                    },
                    "type": "MenuLink",
                    "url": "http://page.com",
                  },
                ],
                "menuId": "menu_one",
              },
            ]
          }
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "menusTitle url_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - menusTitle url - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="menusTitle url_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "menusTitle url_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.MenuGroup with MenuLInks - value[0] - MobileMenu 1`] = `
<div
  id="properties.MenuGroup with MenuLInks"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - properties.MenuGroup with MenuLInks - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="properties.MenuGroup with MenuLInks_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "PageId": "page_1_1",
                      "id": "menu_item_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "PageId": "page_1_2",
                      "id": "menu_item_2",
                      "properties": Object {
                        "title": "Menu Item two",
                      },
                      "type": "MenuLink",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
              ],
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "properties.MenuGroup with MenuLInks_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.MenuGroup with MenuLInks - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.MenuGroup with MenuLInks_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.MenuGroup with MenuLInks_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.danger: true - value[0] - MobileMenu 1`] = `
<div
  id="properties.danger: true"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - properties.danger: true - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="properties.danger: true_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_1_2",
                      "pageId": "page_1_2",
                      "properties": Object {
                        "title": "Menu Item two",
                      },
                      "type": "MenuLink",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
                Object {
                  "id": "menu_item_2",
                  "pageId": "page_2",
                  "properties": Object {
                    "danger": true,
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "properties.danger: true_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.danger: true - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.danger: true_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.danger: true_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.icon - value[0] - MobileMenu 1`] = `
<div
  id="properties.icon"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - properties.icon - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="properties.icon_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "Menu_item_one",
                  "pageId": "page_1",
                  "properties": Object {
                    "icon": "AiFillRocket",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "Menu Item two",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "properties.icon_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.icon - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.icon_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.icon_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.links - value[0] - MobileMenu 1`] = `
<div
  id="properties.links"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - properties.links - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="properties.links_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "Menu_item_one",
                  "pageId": "page_1",
                  "type": "MenuLink",
                },
                Object {
                  "id": "Menu Item two",
                  "pageId": "page_2",
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "properties.links_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.links - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.links_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.links_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.subMenuCloseDelay: 3 - value[0] - MobileMenu 1`] = `
<div
  id="properties.subMenuCloseDelay: 3"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - properties.subMenuCloseDelay: 3 - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="properties.subMenuCloseDelay: 3_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_2",
                      "pageId": "page_1_2",
                      "properties": Object {
                        "title": "Menu Item two",
                      },
                      "type": "MenuLink",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
              ],
              "mode": "inline",
              "subMenuCloseDelay": 3,
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "properties.subMenuCloseDelay: 3_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.subMenuCloseDelay: 3 - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.subMenuCloseDelay: 3_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.subMenuCloseDelay: 3_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.subMenuOpenDelay: 3 - value[0] - MobileMenu 1`] = `
<div
  id="properties.subMenuOpenDelay: 3"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - properties.subMenuOpenDelay: 3 - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="properties.subMenuOpenDelay: 3_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "PageId": "page_1_2",
                      "id": "menu_item_2",
                      "properties": Object {
                        "title": "Menu Item two",
                      },
                      "type": "MenuLink",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
              ],
              "mode": "inline",
              "subMenuOpenDelay": 3,
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "properties.subMenuOpenDelay: 3_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.subMenuOpenDelay: 3 - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.subMenuOpenDelay: 3_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.subMenuOpenDelay: 3_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title - value[0] - MobileMenu 1`] = `
<div
  id="properties.title"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - properties.title - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="properties.title_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "Menu_item_one",
                  "pageId": "page_1",
                  "properties": Object {
                    "icon": "AiFillRocket",
                    "title": "Title Menu Item 1",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "Menu Item two",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "properties.title_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - properties.title - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="properties.title_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "properties.title_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - selectedColor: #f16e1e - value[0] - MobileMenu 1`] = `
<div
  id="selectedColor: #f16e1e"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - selectedColor: #f16e1e - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="selectedColor: #f16e1e_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_1_2",
                      "links": Array [
                        Object {
                          "id": "menu_item_1_2_1",
                          "pageId": "page_1_2_1",
                          "properties": Object {
                            "title": "Menu Group one",
                          },
                          "type": "MenuLink",
                        },
                        Object {
                          "id": "menu_item_1_2_2",
                          "pageId": "page_1_2_2",
                          "properties": Object {
                            "title": "Menu Group two",
                          },
                          "type": "MenuLink",
                        },
                      ],
                      "properties": Object {
                        "title": "Menu Group",
                      },
                      "type": "MenuGroup",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
                Object {
                  "id": "menu_item_2",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "menu_item_3",
                  "pageId": "page_3",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 3",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "selectedColor": "#f16e1e",
              "selectedKeys": Array [
                "menu_item_1_1",
                "menu_item_3",
                "menu_item_1_2_2",
              ],
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "selectedColor: #f16e1e_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - selectedColor: #f16e1e - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="selectedColor: #f16e1e_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "selectedColor: #f16e1e_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - selectedColor: #f16e1e, backgroundColor: #016e1e - value[0] - MobileMenu 1`] = `
<div
  id="selectedColor: #f16e1e, backgroundColor: #016e1e"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - selectedColor: #f16e1e, backgroundColor: #016e1e - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\",\\"backgroundColor\\":\\"#016e1e\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="selectedColor: #f16e1e, backgroundColor: #016e1e_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": "#016e1e",
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\",\\"backgroundColor\\":\\"#016e1e\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "backgroundColor": "#016e1e",
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_1_2",
                      "links": Array [
                        Object {
                          "id": "menu_item_1_2_1",
                          "pageId": "page_1_2_1",
                          "properties": Object {
                            "title": "Menu Group one",
                          },
                          "type": "MenuLink",
                        },
                        Object {
                          "id": "menu_item_1_2_2",
                          "pageId": "page_1_2_2",
                          "properties": Object {
                            "title": "Menu Group two",
                          },
                          "type": "MenuLink",
                        },
                      ],
                      "properties": Object {
                        "title": "Menu Group",
                      },
                      "type": "MenuGroup",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
                Object {
                  "id": "menu_item_2",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "menu_item_3",
                  "pageId": "page_3",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 3",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "selectedColor": "#f16e1e",
              "selectedKeys": Array [
                "menu_item_1_1",
                "menu_item_3",
                "menu_item_1_2_2",
              ],
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "selectedColor: #f16e1e, backgroundColor: #016e1e_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - selectedColor: #f16e1e, backgroundColor: #016e1e - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="selectedColor: #f16e1e, backgroundColor: #016e1e_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "selectedColor: #f16e1e, backgroundColor: #016e1e_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - theme: light - value[0] - MobileMenu 1`] = `
<div
  id="theme: light"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - theme: light - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="theme: light_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_1_2",
                      "links": Array [
                        Object {
                          "id": "menu_item_1_2_1",
                          "pageId": "page_1_2_1",
                          "properties": Object {
                            "title": "Menu Group one",
                          },
                          "type": "MenuLink",
                        },
                        Object {
                          "id": "menu_item_1_2_2",
                          "pageId": "page_1_2_2",
                          "properties": Object {
                            "title": "Menu Group two",
                          },
                          "type": "MenuLink",
                        },
                      ],
                      "properties": Object {
                        "title": "Menu Group",
                      },
                      "type": "MenuGroup",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
                Object {
                  "id": "menu_item_2",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "menu_item_3",
                  "pageId": "page_3",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 3",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "selectedKeys": Array [
                "menu_item_1_1",
                "menu_item_3",
                "menu_item_1_2_2",
              ],
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "theme: light_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - theme: light - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="theme: light_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "theme: light_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - theme: light, selectedColor: #6C2ACB - value[0] - MobileMenu 1`] = `
<div
  id="theme: light, selectedColor: #6C2ACB"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - theme: light, selectedColor: #6C2ACB - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="theme: light, selectedColor: #6C2ACB_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": undefined,
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_1_2",
                      "links": Array [
                        Object {
                          "id": "menu_item_1_2_1",
                          "pageId": "page_1_2_1",
                          "properties": Object {
                            "title": "Menu Group one",
                          },
                          "type": "MenuLink",
                        },
                        Object {
                          "id": "menu_item_1_2_2",
                          "pageId": "page_1_2_2",
                          "properties": Object {
                            "title": "Menu Group two",
                          },
                          "type": "MenuLink",
                        },
                      ],
                      "properties": Object {
                        "title": "Menu Group",
                      },
                      "type": "MenuGroup",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
                Object {
                  "id": "menu_item_2",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "menu_item_3",
                  "pageId": "page_3",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 3",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "selectedColor": "#6C2ACB",
              "selectedKeys": Array [
                "menu_item_1_1",
                "menu_item_3",
                "menu_item_1_2_2",
              ],
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "theme: light, selectedColor: #6C2ACB_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - theme: light, selectedColor: #6C2ACB - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="theme: light, selectedColor: #6C2ACB_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "theme: light, selectedColor: #6C2ACB_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;

exports[`Mock render - theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e - value[0] - MobileMenu 1`] = `
<div
  id="theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e"
>
  mocked
  mocked
</div>
`;

exports[`Mock render - theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e - value[0] - MobileMenu 2`] = `
Array [
  Array [
    Object {
      "bodyStyle": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\",\\"backgroundColor\\":\\"#91cfcf\\"},\\"options\\":true}",
      "children": <React.Fragment>
        <MenuComp
          basePath=""
          blockId="theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e_menu"
          components={
            Object {
              "Icon": [Function],
              "Link": [Function],
            }
          }
          content={Object {}}
          events={Object {}}
          list={Array []}
          menus={Array []}
          methods={
            Object {
              "makeCssClass": [MockFunction] {
                "calls": Array [
                  Array [
                    Array [
                      Object {
                        "&:active": undefined,
                        "&:hover": undefined,
                        "backgroundColor": undefined,
                        "borderColor": undefined,
                      },
                      undefined,
                    ],
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    Object {
                      "backgroundColor": "#91cfcf",
                      "padding": "3.1em 0 0 0",
                    },
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                  Array [
                    undefined,
                    true,
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":[{},null]}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"style\\":{\\"padding\\":\\"3.1em 0 0 0\\",\\"backgroundColor\\":\\"#91cfcf\\"},\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                  Object {
                    "type": "return",
                    "value": "{\\"options\\":true}",
                  },
                ],
              },
              "registerEvent": [Function],
              "registerMethod": [Function],
              "triggerEvent": [Function],
            }
          }
          properties={
            Object {
              "backgroundColor": "#91cfcf",
              "collapsed": false,
              "links": Array [
                Object {
                  "id": "menu_group_1",
                  "links": Array [
                    Object {
                      "id": "menu_item_1_1",
                      "pageId": "page_1_1",
                      "properties": Object {
                        "title": "Menu Item one",
                      },
                      "type": "MenuLink",
                    },
                    Object {
                      "id": "menu_item_1_2",
                      "links": Array [
                        Object {
                          "id": "menu_item_1_2_1",
                          "pageId": "page_1_2_1",
                          "properties": Object {
                            "title": "Menu Group one",
                          },
                          "type": "MenuLink",
                        },
                        Object {
                          "id": "menu_item_1_2_2",
                          "pageId": "page_1_2_2",
                          "properties": Object {
                            "title": "Menu Group two",
                          },
                          "type": "MenuLink",
                        },
                      ],
                      "properties": Object {
                        "title": "Menu Group",
                      },
                      "type": "MenuGroup",
                    },
                  ],
                  "properties": Object {
                    "title": "Menu Group 1",
                  },
                  "type": "MenuGroup",
                },
                Object {
                  "id": "menu_item_2",
                  "pageId": "page_2",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 2",
                  },
                  "type": "MenuLink",
                },
                Object {
                  "id": "menu_item_3",
                  "pageId": "page_3",
                  "properties": Object {
                    "icon": "AiFillVideoCamera",
                    "title": "Title Menu Item 3",
                  },
                  "type": "MenuLink",
                },
              ],
              "mode": "inline",
              "selectedColor": "#f16e1e",
              "selectedKeys": Array [
                "menu_item_1_1",
                "menu_item_3",
                "menu_item_1_2_2",
              ],
              "theme": "light",
            }
          }
          rename={
            Object {
              "events": Object {
                "onClick": "onMenuItemClick",
                "onSelect": "onMenuItemSelect",
              },
            }
          }
          required={false}
          user={Object {}}
          validation={
            Object {
              "errors": Array [],
              "status": null,
              "warnings": Array [],
            }
          }
        />
      </React.Fragment>,
      "closable": undefined,
      "contentWrapperStyle": "{\\"options\\":true}",
      "drawerStyle": "{\\"options\\":true}",
      "extra": undefined,
      "getContainer": undefined,
      "headerStyle": "{\\"options\\":true}",
      "height": undefined,
      "id": "theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e_drawer",
      "keyboard": undefined,
      "mask": undefined,
      "maskClosable": undefined,
      "maskStyle": "{\\"options\\":true}",
      "onClose": [Function],
      "placement": undefined,
      "title": undefined,
      "visible": false,
      "width": undefined,
      "zIndex": undefined,
    },
    Object {},
  ],
]
`;

exports[`Mock render - theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e - value[0] - MobileMenu 3`] = `
Array [
  Array [
    Object {
      "block": undefined,
      "children": false,
      "className": "{\\"style\\":[{},null]}",
      "danger": undefined,
      "disabled": undefined,
      "ghost": undefined,
      "href": undefined,
      "icon": <AntIcon
        basePath=""
        blockId="theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e_button_icon"
        components={Object {}}
        content={Object {}}
        events={Object {}}
        list={Array []}
        menus={Array []}
        methods={
          Object {
            "makeCssClass": [Function],
            "registerEvent": [Function],
            "registerMethod": [Function],
            "triggerEvent": [Function],
          }
        }
        properties={
          Object {
            "name": "AiOutlineMenuFold",
          }
        }
        required={false}
        user={Object {}}
        validation={
          Object {
            "errors": Array [],
            "status": null,
            "warnings": Array [],
          }
        }
      />,
      "id": "theme: light, selectedColor: #f16e1e, backgroundColor: #016e1e_button",
      "loading": undefined,
      "onClick": [Function],
      "shape": undefined,
      "size": undefined,
      "type": "primary",
    },
    Object {},
  ],
]
`;
